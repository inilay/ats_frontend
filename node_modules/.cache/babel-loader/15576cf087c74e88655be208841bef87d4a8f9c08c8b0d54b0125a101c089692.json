{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    registerUser\n  } = useContext(AuthContext);\n  const [modalShow, setModalShow] = useState(false);\n  // const [modalEditShow, setmodalEditShow] = useState(false);\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n    setModalShow(true);\n  };\n  const closeModal = () => {\n    setModalShow(false);\n    navigate(\"/\");\n  };\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      show: modalShow,\n      onHide: () => closeModal(),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"center-block\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-block\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We have sent you an email to confirm your registration.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log_div position-absolute top-50 start-50 translate-middle\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(handleRegisterSubmit),\n        children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Username\",\n          name: \"username\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\"\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Email\",\n          name: \"email\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\",\n            pattern: {\n              value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"⚠ Invalid email.\"\n            }\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\"\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Repeat password\",\n          type: \"password\",\n          name: \"password2\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\",\n            validate: value => {\n              const {\n                password\n              } = getValues();\n              return password === value || \"⚠ Passwords should match!\";\n            }\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          additionalCl: \"btn-md\",\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"//vFZFnsJIIPS/1H167CokIHnmA=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useContext","AuthContext","useForm","useNavigate","Form","MyButton","MyFormGroupInput","MyModal","Modal","Register","state","setState","username","email","password","password2","registerUser","modalShow","setModalShow","handleRegisterSubmit","closeModal","navigate","inputChangeHandler","inputValue","name","value","register","handleSubmit","getValues","formState","errors","mode","required","pattern","message","validate"],"sources":["/home/indiora/ATS/frontend/src/pages/Register.jsx"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport Modal from \"react-bootstrap/Modal\";\n\n\nconst Register = () => {\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { registerUser } = useContext(AuthContext);\n  const [modalShow, setModalShow] = useState(false);\n  // const [modalEditShow, setmodalEditShow] = useState(false);\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n    setModalShow(true);\n    \n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n    navigate(\"/\");\n  }\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setState({ ...state, [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  const navigate = useNavigate();\n\n  return (\n    <section>\n      <MyModal show={modalShow} onHide={() => closeModal()}>\n        <Modal.Header closeButton className=\"center-block\">\n          <h2>Confirm registration</h2>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"center-block\">\n            <p>We have sent you an email to confirm your registration.</p>\n          </div>\n        </Modal.Body>\n      </MyModal>\n      <div className=\"log_div position-absolute top-50 start-50 translate-middle\">\n        <Form onSubmit={handleSubmit(handleRegisterSubmit)}>\n          <MyFormGroupInput\n            label=\"Username\"\n            name=\"username\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Email\"\n            name=\"email\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"⚠ Invalid email.\",\n              },\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Repeat password\"\n            type=\"password\"\n            name=\"password2\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n              validate: (value) => {\n                const { password } = getValues();\n                return password === value || \"⚠ Passwords should match!\";\n              },\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n            Create\n          </MyButton>\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}