{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from \"react\";\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n  _s();\n  const observer = useRef();\n  useEffect(() => {\n    if (isLoading) return;\n    if (observer.current) observer.current.disconnect();\n    var cb = function (entries, observer) {\n      if (entries[0].isIntersecting && canLoad) {\n        callback();\n      }\n    };\n    observer.current = new IntersectionObserver(cb);\n    observer.current.observe(ref.current);\n  }, [isLoading]);\n};\n_s(useObserver, \"mvUvGhiqkPzCYiMPAW/Py9ym/ZY=\");","map":{"version":3,"names":["useRef","useEffect","useObserver","ref","canLoad","isLoading","callback","observer","current","disconnect","cb","entries","isIntersecting","IntersectionObserver","observe"],"sources":["/home/indiora/ATS/frontend/src/hooks/useObserver.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\n\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\n    const observer = useRef();\n    useEffect(() => {\n        if (isLoading) return;\n        if (observer.current) observer.current.disconnect();\n\n        var cb = function (entries, observer) {\n            if (entries[0].isIntersecting && canLoad) {\n                callback();\n            }\n        };\n        observer.current = new IntersectionObserver(cb);\n        observer.current.observe(ref.current);\n    }, [isLoading]);\n};\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAG,EAAEC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,KAAK;EAAA;EAC9D,MAAMC,QAAQ,GAAGP,MAAM,EAAE;EACzBC,SAAS,CAAC,MAAM;IACZ,IAAII,SAAS,EAAE;IACf,IAAIE,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACC,OAAO,CAACC,UAAU,EAAE;IAEnD,IAAIC,EAAE,GAAG,UAAUC,OAAO,EAAEJ,QAAQ,EAAE;MAClC,IAAII,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,IAAIR,OAAO,EAAE;QACtCE,QAAQ,EAAE;MACd;IACJ,CAAC;IACDC,QAAQ,CAACC,OAAO,GAAG,IAAIK,oBAAoB,CAACH,EAAE,CAAC;IAC/CH,QAAQ,CAACC,OAAO,CAACM,OAAO,CAACX,GAAG,CAACK,OAAO,CAAC;EACzC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;AACnB,CAAC;AAAC,GAdWH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}