{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Tournaments/Tournaments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport PostService from \"../../API/PostService\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { getPageCount } from \"../../utils/pages\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport TournamentList from \"../../components/TournamentList\";\nimport TournamentFilter from \"../../components/TournamentFilter\";\nimport { useObserver } from \"../../hooks/useObserver\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournaments() {\n  _s();\n  const [tournaments, setTournaments] = useState([]);\n  const [filter, setFilter] = useState({\n    game: null,\n    title: null\n  });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(12);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [fetchPosts, isPostLoadind, postError] = useFetching(async function (limit, page) {\n    let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    const response = await PostService.getAllTournaments(limit, page, title, game);\n    if (page === 1) {\n      setTournaments([...response.data.results]);\n    } else {\n      setTournaments([...tournaments, ...response.data.results]);\n    }\n    setTotalPages(getPageCount(response.data.count, limit));\n  });\n  useObserver(lastElement, page < totalPages, isPostLoadind, () => {\n    setPage(page + 1);\n  });\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      if (filter.title !== null || filter.game !== null) {\n        setSearchParams({\n          \"title\": filter.title,\n          \"game\": filter.game\n        });\n        fetchPosts(limit, page, filter.title, filter.game);\n      }\n    }, 600);\n    return () => {\n      clearTimeout(timeOutId);\n    };\n  }, [filter.title, filter.game]);\n  useEffect(() => {\n    console.log('page');\n    if (searchParams !== 0) {\n      fetchPosts(limit, page, searchParams.get('title') === 'null' ? \"\" : searchParams.get('title'), searchParams.get('game') === 'null' ? \"\" : searchParams.get('game'));\n    } else {\n      fetchPosts(limit, page);\n    }\n  }, [page, limit]);\n\n  // console.log(tournaments)\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container tournaments_section pb-5\",\n    children: [postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TournamentFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isPostLoadind ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(TournamentList, {\n          tournaments: tournaments,\n          title: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      className: \"invisible-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournaments, \"XPaSQhhDf4yYC8NIOVZ9NrjwbAY=\", false, function () {\n  return [useSearchParams, useFetching, useObserver];\n});\n_c = Tournaments;\nexport default Tournaments;\nvar _c;\n$RefreshReg$(_c, \"Tournaments\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useSearchParams","PostService","useFetching","getPageCount","Loader","TournamentList","TournamentFilter","useObserver","Row","Col","Tournaments","tournaments","setTournaments","filter","setFilter","game","title","totalPages","setTotalPages","limit","setLimit","page","setPage","lastElement","searchParams","setSearchParams","fetchPosts","isPostLoadind","postError","response","getAllTournaments","data","results","count","timeOutId","setTimeout","clearTimeout","console","log","get"],"sources":["/home/indiora/ATS/frontend/src/pages/Tournaments/Tournaments.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport PostService from \"../../API/PostService\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { getPageCount } from \"../../utils/pages\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport TournamentList from \"../../components/TournamentList\";\nimport TournamentFilter from \"../../components/TournamentFilter\";\nimport { useObserver } from \"../../hooks/useObserver\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../../styles/App.css\";\n\nfunction Tournaments() {\n  const [tournaments, setTournaments] = useState([]);\n  const [filter, setFilter] = useState({ game: null, title: null });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(12);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [fetchPosts, isPostLoadind, postError] = useFetching(async (limit, page, title = \"\", game = \"\") => {\n    const response = await PostService.getAllTournaments(limit, page, title, game);\n    if (page === 1) {\n      setTournaments([...response.data.results]);\n    }\n    else {\n      setTournaments([...tournaments, ...response.data.results]);\n\n    }\n    setTotalPages(getPageCount(response.data.count, limit));\n  });\n\n  useObserver(lastElement, page < totalPages, isPostLoadind, () => {\n    setPage(page + 1);\n  });\n\n  useEffect(() => {\n    const timeOutId = setTimeout(() => {\n      if (filter.title !== null || filter.game !== null) {\n        setSearchParams({ \"title\": filter.title, \"game\": filter.game });\n        fetchPosts(limit, page, filter.title, filter.game);\n      }\n    }, 600);\n\n    return () => {\n      clearTimeout(timeOutId);\n    };\n\n  }, [filter.title, filter.game]);\n\n  useEffect(() => {\n    console.log('page')\n    if (searchParams !== 0) {\n      fetchPosts(limit, page,\n        searchParams.get('title') === 'null' ? \"\" : searchParams.get('title'),\n        searchParams.get('game') === 'null' ? \"\" : searchParams.get('game'))\n    }\n    else {\n      fetchPosts(limit, page)\n    }\n\n  }, [page, limit]);\n\n\n  // console.log(tournaments)\n  return (\n    <section className=\"container tournaments_section pb-5\">\n      {postError && <h1>Error ${postError}</h1>}\n\n      <TournamentFilter filter={filter} setFilter={setFilter} />\n\n      {isPostLoadind ?\n        (<div className=\"loader\">\n          <Loader />\n        </div>)\n        : (\n          <Row>\n            <Col lg={12}>\n              <TournamentList\n                tournaments={tournaments}\n                title=\"title\"\n              />\n            </Col>\n          </Row>\n        )}\n      <div ref={lastElement} className=\"invisible-div\"></div>\n    </section>\n  );\n}\n\nexport default Tournaments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}