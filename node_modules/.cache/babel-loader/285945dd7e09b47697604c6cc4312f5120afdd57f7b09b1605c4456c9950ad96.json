{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport Modal from \"react-bootstrap/Modal\";\nimport MyCard from \"../components/UI/MyCard/MyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    registerUser\n  } = useContext(AuthContext);\n  const [modalShow, setModalShow] = useState(false);\n  // const [modalEditShow, setmodalEditShow] = useState(false);\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n    setModalShow(true);\n  };\n  const closeModal = () => {\n    setModalShow(false);\n    navigate(\"/\");\n  };\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MyModal, {\n        show: modalShow,\n        onHide: () => closeModal(),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          className: \"center-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-block\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"We have sent you an email to confirm your registration.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log_div\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(handleRegisterSubmit),\n          children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n            label: \"Username\",\n            name: \"username\",\n            errors: errors,\n            register: register,\n            validationSchema: {\n              required: \"⚠ This input is required.\"\n            },\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n            label: \"Email\",\n            name: \"email\",\n            errors: errors,\n            register: register,\n            validationSchema: {\n              required: \"⚠ This input is required.\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"⚠ Invalid email.\"\n              }\n            },\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n            label: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            errors: errors,\n            register: register,\n            validationSchema: {\n              required: \"⚠ This input is required.\"\n            },\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n            label: \"Repeat password\",\n            type: \"password\",\n            name: \"password2\",\n            errors: errors,\n            register: register,\n            validationSchema: {\n              required: \"⚠ This input is required.\",\n              validate: value => {\n                const {\n                  password\n                } = getValues();\n                return password === value || \"⚠ Passwords should match!\";\n              }\n            },\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            additionalCl: \"btn-md\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"//vFZFnsJIIPS/1H167CokIHnmA=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useContext","AuthContext","useForm","useNavigate","Form","MyButton","MyFormGroupInput","MyModal","Modal","MyCard","Register","state","setState","username","email","password","password2","registerUser","modalShow","setModalShow","handleRegisterSubmit","closeModal","navigate","inputChangeHandler","inputValue","name","value","register","handleSubmit","getValues","formState","errors","mode","required","pattern","message","validate"],"sources":["/home/indiora/ATS/frontend/src/pages/Register.jsx"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyModal from \"../components/UI/MyModal/MyModal\";\nimport Modal from \"react-bootstrap/Modal\";\nimport MyCard from \"../components/UI/MyCard/MyCard\";\n\nconst Register = () => {\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { registerUser } = useContext(AuthContext);\n  const [modalShow, setModalShow] = useState(false);\n  // const [modalEditShow, setmodalEditShow] = useState(false);\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n    setModalShow(true);\n\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n    navigate(\"/\");\n  }\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setState({ ...state, [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  const navigate = useNavigate();\n\n  return (\n    <section>\n      <div>\n        <MyModal show={modalShow} onHide={() => closeModal()}>\n          <Modal.Header closeButton className=\"center-block\">\n            <h2>Confirm registration</h2>\n          </Modal.Header>\n          <Modal.Body>\n            <div className=\"center-block\">\n              <p>We have sent you an email to confirm your registration.</p>\n            </div>\n          </Modal.Body>\n        </MyModal>\n        <div className=\"log_div\">\n          <Form onSubmit={handleSubmit(handleRegisterSubmit)}>\n            <MyFormGroupInput\n              label=\"Username\"\n              name=\"username\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyFormGroupInput\n              label=\"Email\"\n              name=\"email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n                pattern: {\n                  value:\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  message: \"⚠ Invalid email.\",\n                },\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyFormGroupInput\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyFormGroupInput\n              label=\"Repeat password\"\n              type=\"password\"\n              name=\"password2\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n                validate: (value) => {\n                  const { password } = getValues();\n                  return password === value || \"⚠ Passwords should match!\";\n                },\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Create\n            </MyButton>\n          </Form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}