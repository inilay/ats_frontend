{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/UI/MyFormGroupInput/MyFormGroupInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport classes from \"./MyFormGroupInput.module.css\";\nimport { useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFormGroupInput = _ref => {\n  _s();\n  var _errors$name;\n  let {\n    label,\n    defaultValue,\n    name,\n    trigger,\n    control,\n    as,\n    type,\n    onChange,\n    register = () => {},\n    validationSchema,\n    errors,\n    className\n  } = _ref;\n  const inputChangeHandler = event => {\n    console.log();\n    onChange(event.target);\n  };\n  const {\n    field,\n    fieldState\n  } = useController({\n    register,\n    name: name\n  });\n  useEffect(() => {\n    console.log(\"field\", field);\n    // console.log(\"defaultValue\", defaultValue);\n    // console.log(\"name\", name);\n\n    if (field.value !== defaultValue && !fieldState.isTouched) {\n      trigger(name, {\n        shouldFocus: true\n      });\n    }\n  }, [defaultValue, field.value, fieldState.isTouched, trigger]);\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      className: `${classes.myFormLabel}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      ...register(name, validationSchema),\n      type: type,\n      as: as,\n      ...field,\n      onChange: inputChangeHandler,\n      className: `${classes.myInput} ${className} shadow-none`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), errors && errors[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.warningP,\n      role: \"alert\",\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MyFormGroupInput, \"s6k1O3ofMIQHXRRfQg75J8DDbkk=\", false, function () {\n  return [useController];\n});\n_c = MyFormGroupInput;\nexport default MyFormGroupInput;\nvar _c;\n$RefreshReg$(_c, \"MyFormGroupInput\");","map":{"version":3,"names":["React","useEffect","Form","classes","useController","MyFormGroupInput","label","defaultValue","name","trigger","control","as","type","onChange","register","validationSchema","errors","className","inputChangeHandler","event","console","log","target","field","fieldState","value","isTouched","shouldFocus","myFormLabel","myInput","warningP","message"],"sources":["/home/indiora/ATS/frontend/src/components/UI/MyFormGroupInput/MyFormGroupInput.jsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport classes from \"./MyFormGroupInput.module.css\";\nimport { useController } from \"react-hook-form\";\n\nconst MyFormGroupInput = ({ label, defaultValue, name, trigger, control, as, type, onChange, register = () => {}, validationSchema, errors, className}) => {\n\n    const inputChangeHandler = (event) => {\n        console.log();\n        \n        onChange(event.target)\n    }\n\n    const { field, fieldState } = useController({ register, name: name });\n\n    useEffect(() => {\n        console.log(\"field\", field);\n        // console.log(\"defaultValue\", defaultValue);\n        // console.log(\"name\", name);\n        \n        if (field.value !== defaultValue && !fieldState.isTouched) {\n          trigger(name, { shouldFocus: true });\n        }\n      }, [defaultValue, field.value, fieldState.isTouched, trigger]);\n\n    return (\n        <Form.Group className=\"mb-3\">\n            <Form.Label className={`${classes.myFormLabel}`}>{label}</Form.Label>\n            <Form.Control\n                {...register(name, validationSchema)}\n                type={type}\n                as={as}\n                {...field}\n                onChange={inputChangeHandler}\n                className={`${classes.myInput} ${className} shadow-none`}\n            />\n        {errors && errors[name] && <p className={classes.warningP} role=\"alert\">{errors[name]?.message}</p>}\n        </Form.Group>\n    );\n};\n\nexport default MyFormGroupInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,MAAMC,gBAAgB,GAAG,QAAkI;EAAA;EAAA;EAAA,IAAjI;IAAEC,KAAK;IAAEC,YAAY;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC,EAAE;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ,GAAG,MAAM,CAAC,CAAC;IAAEC,gBAAgB;IAAEC,MAAM;IAAEC;EAAS,CAAC;EAElJ,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClCC,OAAO,CAACC,GAAG,EAAE;IAEbR,QAAQ,CAACM,KAAK,CAACG,MAAM,CAAC;EAC1B,CAAC;EAED,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGpB,aAAa,CAAC;IAAEU,QAAQ;IAAEN,IAAI,EAAEA;EAAK,CAAC,CAAC;EAErEP,SAAS,CAAC,MAAM;IACZmB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC;IAC3B;IACA;;IAEA,IAAIA,KAAK,CAACE,KAAK,KAAKlB,YAAY,IAAI,CAACiB,UAAU,CAACE,SAAS,EAAE;MACzDjB,OAAO,CAACD,IAAI,EAAE;QAAEmB,WAAW,EAAE;MAAK,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACpB,YAAY,EAAEgB,KAAK,CAACE,KAAK,EAAED,UAAU,CAACE,SAAS,EAAEjB,OAAO,CAAC,CAAC;EAEhE,oBACI,QAAC,IAAI,CAAC,KAAK;IAAC,SAAS,EAAC,MAAM;IAAA,wBACxB,QAAC,IAAI,CAAC,KAAK;MAAC,SAAS,EAAG,GAAEN,OAAO,CAACyB,WAAY,EAAE;MAAA,UAAEtB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAc,eACrE,QAAC,IAAI,CAAC,OAAO;MAAA,GACLQ,QAAQ,CAACN,IAAI,EAAEO,gBAAgB,CAAC;MACpC,IAAI,EAAEH,IAAK;MACX,EAAE,EAAED,EAAG;MAAA,GACHY,KAAK;MACT,QAAQ,EAAEL,kBAAmB;MAC7B,SAAS,EAAG,GAAEf,OAAO,CAAC0B,OAAQ,IAAGZ,SAAU;IAAc;MAAA;MAAA;MAAA;IAAA,QAC3D,EACLD,MAAM,IAAIA,MAAM,CAACR,IAAI,CAAC,iBAAI;MAAG,SAAS,EAAEL,OAAO,CAAC2B,QAAS;MAAC,IAAI,EAAC,OAAO;MAAA,0BAAEd,MAAM,CAACR,IAAI,CAAC,iDAAZ,aAAcuB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACtF;AAErB,CAAC;AAAC,GAlCI1B,gBAAgB;EAAA,QAQYD,aAAa;AAAA;AAAA,KARzCC,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}