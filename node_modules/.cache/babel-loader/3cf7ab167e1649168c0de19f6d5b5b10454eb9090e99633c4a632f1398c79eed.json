{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/PaginationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport PostService from \"../API/PostService\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport TournamentList from \"../components/TournamentList\";\nimport TournamentFilter from \"../components/TournamentFilter\";\nimport { useTournaments } from \"../hooks/useTournaments\";\nimport Pagination from \"../components/UI/Pagination/Pagination\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaginationPage() {\n  _s();\n  const [tournaments, setTournaments] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(2);\n  const [page, setPage] = useState(0);\n  const lastElement = useRef();\n  const sortedAndSearchedTournaments = useTournaments(tournaments, filter.sort, filter.query);\n  const [fetchPosts, isPostLoadind, postError] = useFetching(async () => {\n    const response = await PostService.getAllTournaments(limit, page);\n    setTournaments([...response.data.results]);\n    setTotalPages(getPageCount(response.data.count, limit));\n  });\n  const changePage = page => {\n    setPage(page);\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container tournaments_section pb-5\",\n    children: [postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TournamentFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isPostLoadind ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(TournamentList, {\n          tournaments: sortedAndSearchedTournaments,\n          title: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      page: page,\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(PaginationPage, \"xFwI5A5+3+NyLgYRMqdjxGVJsQ0=\", false, function () {\n  return [useTournaments, useFetching];\n});\n_c = PaginationPage;\nexport default PaginationPage;\nvar _c;\n$RefreshReg$(_c, \"PaginationPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PostService","useFetching","getPageCount","Loader","TournamentList","TournamentFilter","useTournaments","Pagination","Row","Col","PaginationPage","tournaments","setTournaments","filter","setFilter","sort","query","totalPages","setTotalPages","limit","setLimit","page","setPage","lastElement","sortedAndSearchedTournaments","fetchPosts","isPostLoadind","postError","response","getAllTournaments","data","results","count","changePage"],"sources":["/home/indiora/ATS/frontend/src/pages/PaginationPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport PostService from \"../API/PostService\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport TournamentList from \"../components/TournamentList\";\nimport TournamentFilter from \"../components/TournamentFilter\";\nimport { useTournaments } from \"../hooks/useTournaments\";\nimport Pagination from \"../components/UI/Pagination/Pagination\"\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../styles/App.css\";\n\nfunction PaginationPage() {\n  const [tournaments, setTournaments] = useState([]);\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(2);\n  const [page, setPage] = useState(0);\n  const lastElement = useRef();\n\n  const sortedAndSearchedTournaments = useTournaments(\n    tournaments,\n    filter.sort,\n    filter.query\n  );\n\n  const [fetchPosts, isPostLoadind, postError] = useFetching(async () => {\n    const response = await PostService.getAllTournaments(limit, page);\n    setTournaments([...response.data.results]);\n    setTotalPages(getPageCount(response.data.count, limit));\n  });\n\n  const changePage = (page) => {\n    setPage(page);\n  };\n  \n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n\n  return (\n    <section className=\"container tournaments_section pb-5\">\n      {postError && <h1>Error ${postError}</h1>}\n      <TournamentFilter filter={filter} setFilter={setFilter} />\n      {isPostLoadind ? \n        (<div className=\"loader\">\n          <Loader />\n        </div>)\n      : (\n      <Row>\n        <Col lg={12}>\n          <TournamentList\n            tournaments={sortedAndSearchedTournaments}\n            title=\"title\"\n          />\n        </Col>\n      </Row>\n      )}\n     <Pagination totalPages={totalPages} page={page} changePage={changePage}/>\n    </section>\n  );\n}\n\nexport default PaginationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}