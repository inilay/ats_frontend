{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/context/index.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const ThemeContext = /*#__PURE__*/createContext(null);\nconst baseURL = \"http://127.0.0.1:8000/api/v1\";\nconst api = axios;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [authTokens, setAuthTokens] = useState(() => localStorage.getItem(\"authTokens\") ? JSON.parse(localStorage.getItem(\"authTokens\")) : null);\n  const [user, setUser] = useState(() => localStorage.getItem(\"authTokens\") ? jwt_decode(localStorage.getItem(\"authTokens\")) : null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    const response = await fetch(`${baseURL}/token/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n    } else {\n      alert(\"Something went wrong!\");\n    }\n  };\n  const registerUser = async (username, email, password, password2) => {\n    const response = await axios(`${baseURL}/register/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password,\n        password2\n      })\n    });\n    console.log('response', response);\n    if (response.status === 201) {\n      loginUser(email, password);\n    } else {\n      console.log('response for reg', response.data);\n\n      // throw new Error(\"Parameter is not a number!\");\n      // alert(\"Something went wrong!\");\n    }\n  };\n\n  const logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/\");\n  };\n  const contextData = {\n    user,\n    setUser,\n    authTokens,\n    setAuthTokens,\n    registerUser,\n    loginUser,\n    logoutUser\n  };\n  useEffect(() => {\n    if (authTokens) {\n      setUser(jwt_decode(authTokens.access));\n    }\n    setLoading(false);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }, this);\n};\n_s(AuthProvider, \"P16vwe1wXXCzeXKNjG5bafFLXJg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwt_decode","useNavigate","axios","AuthContext","ThemeContext","baseURL","api","AuthProvider","children","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","email","password","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","registerUser","username","password2","console","log","logoutUser","removeItem","contextData"],"sources":["/home/indiora/ATS/frontend/src/context/index.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext(null)\n\nexport const ThemeContext = createContext(null);\n\nconst baseURL = \"http://127.0.0.1:8000/api/v1\";\nconst api = axios\n\nexport const AuthProvider = ({ children }) => {\n    const [authTokens, setAuthTokens] = useState(() =>\n      localStorage.getItem(\"authTokens\")\n        ? JSON.parse(localStorage.getItem(\"authTokens\"))\n        : null\n    );\n    const [user, setUser] = useState(() =>\n      localStorage.getItem(\"authTokens\")\n        ? jwt_decode(localStorage.getItem(\"authTokens\"))\n        : null\n    );\n    const [loading, setLoading] = useState(true);\n  \n    const navigate = useNavigate();\n  \n    const loginUser = async (email, password) => {\n      const response = await fetch(`${baseURL}/token/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n  \n      if (response.status === 200) {\n          setAuthTokens(data);\n          setUser(jwt_decode(data.access));\n          localStorage.setItem(\"authTokens\", JSON.stringify(data));\n          navigate(\"/\");\n    \n      } else {\n          alert(\"Something went wrong!\");\n      }\n    };\n    \n    const registerUser = async (username, email, password, password2) => {\n      const response = await axios(`${baseURL}/register/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password,\n          password2\n        })\n      });\n      console.log('response', response)\n      if (response.status === 201) {\n        loginUser(email, password)\n      } else {\n        console.log('response for reg', response.data);\n        \n        // throw new Error(\"Parameter is not a number!\");\n        // alert(\"Something went wrong!\");\n      }\n    };\n  \n    const logoutUser = () => {\n      setAuthTokens(null);\n      setUser(null);\n      localStorage.removeItem(\"authTokens\");\n      navigate(\"/\");\n    };\n  \n    const contextData = {\n      user,\n      setUser,\n      authTokens,\n      setAuthTokens,\n      registerUser,\n      loginUser,\n      logoutUser\n    };\n  \n    useEffect(() => {\n      if (authTokens) {\n        setUser(jwt_decode(authTokens.access));\n      }\n      setLoading(false);\n    }, [authTokens, loading]);\n  \n    return (\n      <AuthContext.Provider value={contextData}>\n        {loading ? null : children}\n      </AuthContext.Provider>\n    );\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}