{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst tournamentSlice = createSlice({\n  name: 'tournament',\n  initialState: {\n    id: '',\n    link: '',\n    title: '',\n    content: '',\n    owner: '',\n    startTime: '',\n    poster: '',\n    game: '',\n    moderators: []\n  },\n  reducers: {\n    setTournament(state, action) {\n      state.id = action.payload.id;\n      state.link = action.payload.link;\n      state.title = action.payload.title;\n      state.content = action.payload.content;\n      state.owner = action.payload.owner;\n      state.startTime = action.payload.startTime;\n      state.poster = action.payload.poster;\n      state.game = action.payload.game;\n      state.moderators = action.payload.moderators;\n    },\n    addModerator(state, action) {\n      if (!state.moderators.includes(action.payload.moderator)) state.moderators = [...state.moderators, action.payload.moderator];\n    },\n    deleteModerator(state, action) {\n      state.moderators = state.moderators.filter(username => username != action.payload.moderator);\n    },\n    clearTournament(state) {\n      state.id = '';\n      state.link = '';\n      state.title = '';\n      state.content = '';\n      state.owner = '';\n      state.startTime = '';\n      state.poster = '';\n      state.game = '';\n      state.moderators = [];\n    }\n  }\n});\nexport const {\n  setTournament,\n  addModerator,\n  deleteModerator,\n  clearTournament\n} = tournamentSlice.actions;\nexport default tournamentSlice.reducer;","map":{"version":3,"names":["createSlice","tournamentSlice","name","initialState","id","link","title","content","owner","startTime","poster","game","moderators","reducers","setTournament","state","action","payload","addModerator","includes","moderator","deleteModerator","filter","username","clearTournament","actions","reducer"],"sources":["/home/indiora/ATS/frontend/src/store/tournament.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst tournamentSlice = createSlice({\n    name: 'tournament',\n    initialState: {\n        id: '',\n        link: '',\n        title: '',\n        content: '',\n        owner: '',\n        startTime: '',\n        poster: '', \n        game: '',\n        moderators: []\n    },\n    reducers: {\n        setTournament(state, action) {\n            state.id = action.payload.id\n            state.link = action.payload.link\n            state.title = action.payload.title\n            state.content = action.payload.content\n            state.owner = action.payload.owner\n            state.startTime = action.payload.startTime\n            state.poster = action.payload.poster\n            state.game = action.payload.game\n            state.moderators = action.payload.moderators\n        },\n\n        addModerator(state, action) {\n            if (!state.moderators.includes(action.payload.moderator))\n                state.moderators = [...state.moderators, action.payload.moderator]\n        },\n\n        deleteModerator(state, action) {\n            state.moderators = state.moderators.filter((username) => username != action.payload.moderator)\n        },\n       \n        clearTournament(state) {\n            state.id = ''\n            state.link = ''\n            state.title = ''\n            state.content = ''\n            state.owner = ''\n            state.startTime = ''\n            state.poster = ''\n            state.game = ''\n            state.moderators = []\n        },\n    }\n})\n\nexport const { setTournament, addModerator, deleteModerator, clearTournament } = tournamentSlice.actions;\n\nexport default tournamentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,eAAe,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,EAAE,EAAE,EAAE;IACNC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACNC,aAAa,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACX,EAAE,GAAGY,MAAM,CAACC,OAAO,CAACb,EAAE;MAC5BW,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCU,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCS,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACV,OAAO;MACtCQ,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;MAClCO,KAAK,CAACN,SAAS,GAAGO,MAAM,CAACC,OAAO,CAACR,SAAS;MAC1CM,KAAK,CAACL,MAAM,GAAGM,MAAM,CAACC,OAAO,CAACP,MAAM;MACpCK,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO,CAACN,IAAI;MAChCI,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACC,OAAO,CAACL,UAAU;IAChD,CAAC;IAEDM,YAAY,CAACH,KAAK,EAAEC,MAAM,EAAE;MACxB,IAAI,CAACD,KAAK,CAACH,UAAU,CAACO,QAAQ,CAACH,MAAM,CAACC,OAAO,CAACG,SAAS,CAAC,EACpDL,KAAK,CAACH,UAAU,GAAG,CAAC,GAAGG,KAAK,CAACH,UAAU,EAAEI,MAAM,CAACC,OAAO,CAACG,SAAS,CAAC;IAC1E,CAAC;IAEDC,eAAe,CAACN,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACH,UAAU,GAAGG,KAAK,CAACH,UAAU,CAACU,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,IAAIP,MAAM,CAACC,OAAO,CAACG,SAAS,CAAC;IAClG,CAAC;IAEDI,eAAe,CAACT,KAAK,EAAE;MACnBA,KAAK,CAACX,EAAE,GAAG,EAAE;MACbW,KAAK,CAACV,IAAI,GAAG,EAAE;MACfU,KAAK,CAACT,KAAK,GAAG,EAAE;MAChBS,KAAK,CAACR,OAAO,GAAG,EAAE;MAClBQ,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACN,SAAS,GAAG,EAAE;MACpBM,KAAK,CAACL,MAAM,GAAG,EAAE;MACjBK,KAAK,CAACJ,IAAI,GAAG,EAAE;MACfI,KAAK,CAACH,UAAU,GAAG,EAAE;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,aAAa;EAAEI,YAAY;EAAEG,eAAe;EAAEG;AAAgB,CAAC,GAAGvB,eAAe,CAACwB,OAAO;AAExG,eAAexB,eAAe,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}