{"ast":null,"code":"import axios from 'axios';\nconst baseURL = \"http://127.0.0.1:49088/api/v1\";\nexport default class PostService {\n  static async getAllTournaments() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 9;\n    let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const response = await axios.get(`${baseURL}/tournaments/`, {\n      params: {\n        limit: limit,\n        offset: page * limit\n      }\n    });\n    return response;\n  }\n  static async getTournamentBySlug(slug) {\n    const response = await axios.get(`${baseURL}/tournament/${slug}/`);\n    return response;\n  }\n  static async createTournament(responseBody) {\n    const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  }\n  static async getProfileBySlug(slug) {\n    const response = await axios.get(`${baseURL}/profile/${slug}/`);\n    return response;\n  }\n  static async getBracketById(id) {\n    const response = await axios.get(`${baseURL}/bracket/${id}/`);\n    return response;\n  }\n  static async createBracket(responseBody) {\n    const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  }\n  static async allTournamentBrackets(slug) {\n    const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`);\n    return response;\n  }\n  static async resetPassword(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset/`, responseBody);\n    return response;\n  }\n  static async resetPasswordConfirm(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody);\n    return response;\n  }\n}","map":{"version":3,"names":["axios","baseURL","PostService","getAllTournaments","limit","page","response","get","params","offset","getTournamentBySlug","slug","createTournament","responseBody","post","validateStatus","status","getProfileBySlug","getBracketById","id","createBracket","allTournamentBrackets","resetPassword","resetPasswordConfirm"],"sources":["/home/at/vercel_frontend/ATS/frontend/src/API/PostService.js"],"sourcesContent":["import axios from 'axios'\n\nconst baseURL = \"http://127.0.0.1:49088/api/v1\";\n\n\nexport default class PostService {\n\n    static async getAllTournaments(limit=9, page=1) {\n      \n        const response = await axios.get(`${baseURL}/tournaments/`, \n        {params: {\n            limit: limit,\n            offset: page*limit\n        }})\n        return  response\n\n    }\n\n    static async getTournamentBySlug(slug) {\n\n        const response = await axios.get(`${baseURL}/tournament/${slug}/`)\n        return  response\n\n    }\n\n\n    static async createTournament(responseBody) {\n\n        const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n\n            validateStatus: function (status) {\n    \n                    return status == 201;\n                },\n            })\n        return  response\n\n    }\n\n    static async getProfileBySlug(slug) {\n\n        const response = await axios.get(`${baseURL}/profile/${slug}/`)\n        return  response\n\n    }\n\n    static async getBracketById(id) {\n\n        const response = await axios.get(`${baseURL}/bracket/${id}/`)\n        return  response\n\n    }\n\n    static async createBracket(responseBody) {\n\n        const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n\n        validateStatus: function (status) {\n\n                return status == 201;\n            },\n        })\n\n        return  response\n\n    }\n\n    static async allTournamentBrackets(slug) {\n\n        const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`)\n        return  response\n\n    }\n\n    static async resetPassword(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset/`, responseBody)\n\n        return  response\n    } \n\n    static async resetPasswordConfirm(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody)\n\n        return  response\n    }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,+BAA+B;AAG/C,eAAe,MAAMC,WAAW,CAAC;EAE7B,aAAaC,iBAAiB,GAAkB;IAAA,IAAjBC,KAAK,uEAAC,CAAC;IAAA,IAAEC,IAAI,uEAAC,CAAC;IAE1C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,eAAc,EAC1D;MAACO,MAAM,EAAE;QACLJ,KAAK,EAAEA,KAAK;QACZK,MAAM,EAAEJ,IAAI,GAACD;MACjB;IAAC,CAAC,CAAC;IACH,OAAQE,QAAQ;EAEpB;EAEA,aAAaI,mBAAmB,CAACC,IAAI,EAAE;IAEnC,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,eAAcU,IAAK,GAAE,CAAC;IAClE,OAAQL,QAAQ;EAEpB;EAGA,aAAaM,gBAAgB,CAACC,YAAY,EAAE;IAExC,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,qBAAoB,EAAEY,YAAY,EAAE;MAE7EE,cAAc,EAAE,UAAUC,MAAM,EAAE;QAE1B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IACN,OAAQV,QAAQ;EAEpB;EAEA,aAAaW,gBAAgB,CAACN,IAAI,EAAE;IAEhC,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,YAAWU,IAAK,GAAE,CAAC;IAC/D,OAAQL,QAAQ;EAEpB;EAEA,aAAaY,cAAc,CAACC,EAAE,EAAE;IAE5B,MAAMb,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,YAAWkB,EAAG,GAAE,CAAC;IAC7D,OAAQb,QAAQ;EAEpB;EAEA,aAAac,aAAa,CAACP,YAAY,EAAE;IAErC,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,kBAAiB,EAAEY,YAAY,EAAE;MAE9EE,cAAc,EAAE,UAAUC,MAAM,EAAE;QAE1B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IAEF,OAAQV,QAAQ;EAEpB;EAEA,aAAae,qBAAqB,CAACV,IAAI,EAAE;IAErC,MAAML,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,OAAQ,wBAAuBU,IAAK,GAAE,CAAC;IAC3E,OAAQL,QAAQ;EAEpB;EAEA,aAAagB,aAAa,CAACT,YAAY,EAAE;IAErC,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,kBAAiB,EAAEY,YAAY,CAAC;IAE7E,OAAQP,QAAQ;EACpB;EAEA,aAAaiB,oBAAoB,CAACV,YAAY,EAAE;IAE5C,MAAMP,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,0BAAyB,EAAEY,YAAY,CAAC;IAErF,OAAQP,QAAQ;EACpB;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}