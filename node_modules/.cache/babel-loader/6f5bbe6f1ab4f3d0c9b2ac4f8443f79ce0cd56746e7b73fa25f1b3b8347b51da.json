{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Feedback/FeedBack.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport PostService from \"../../API/PostService\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport classes from \"./FeedBack.module.css\";\nimport auxiliaryApi from \"../../services/api/auxiliaryApi\";\nimport useAxios from \"../../API/useAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedBack = () => {\n  _s();\n  const navigate = useNavigate();\n  const [responseBody, setResponseBody] = useState({\n    participants: \"\",\n    type: \"SE\",\n    points_loss: \"0\",\n    points_draw: \"0\",\n    points_victory: \"1\",\n    secod_final: false\n  });\n  const api = a();\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n  };\n  const inputSelectChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n  };\n  const inputCheckBoxChangeHandler = e => {\n    const {\n      target\n    } = e;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const {\n      name\n    } = target;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const onSubmitHandler = () => {\n    const response = auxiliaryApi.sendFeedback(api, responseBody).then(function (response) {\n      if (response.status == 201) {\n        navigate(`/`);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.feedback_form}`,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmitHandler),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(MyCard, {\n            border: \"success\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"card-header-text\",\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: `${classes.myFormLabel}`,\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  className: \"shadow-none select-input\",\n                  name: \"type\",\n                  onChange: e => inputSelectChangeHandler(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"BUG\",\n                    children: \"Bug\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"PROPOSAL\",\n                    children: \"Proposal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"OTHER\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Description\",\n                name: \"content\",\n                as: \"textarea\",\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  required: \"âš  This input is required.\"\n                },\n                onChange: inputChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(MyButton, {\n            additionalCl: \"btn-md\",\n            type: \"submit\",\n            children: \"Send Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedBack, \"nv1qaqS2y98vPjELdFKwO58UEG4=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = FeedBack;\nexport default FeedBack;\nvar _c;\n$RefreshReg$(_c, \"FeedBack\");","map":{"version":3,"names":["React","useState","useNavigate","Form","Card","PostService","useForm","MyFormGroupInput","MyButton","MyCard","classes","auxiliaryApi","useAxios","FeedBack","navigate","responseBody","setResponseBody","participants","type","points_loss","points_draw","points_victory","secod_final","api","a","inputChangeHandler","inputValue","name","value","inputSelectChangeHandler","event","target","inputCheckBoxChangeHandler","e","checked","register","handleSubmit","formState","errors","mode","onSubmitHandler","response","sendFeedback","then","status","feedback_form","myFormLabel","required"],"sources":["/home/indiora/ATS/frontend/src/pages/Feedback/FeedBack.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nimport PostService from \"../../API/PostService\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport classes from \"./FeedBack.module.css\";\nimport auxiliaryApi from \"../../services/api/auxiliaryApi\";\nimport useAxios from \"../../API/useAxios\";\n\n\nconst FeedBack = () => {\n  const navigate = useNavigate();\n\n  const [responseBody, setResponseBody] = useState({\n    participants: \"\",\n    type: \"SE\",\n    points_loss: \"0\",\n    points_draw: \"0\",\n    points_victory: \"1\",\n    secod_final: false,\n  });\n  const api = a()\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setResponseBody({ ...responseBody, [name]: value });\n  };\n\n  const inputSelectChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setResponseBody({ ...responseBody, [name]: value });\n  };\n\n  const inputCheckBoxChangeHandler = (e) => {\n    const { target } = e;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n    setResponseBody({ ...responseBody, [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  const onSubmitHandler = () => {\n    const response = auxiliaryApi.sendFeedback(api, responseBody).then(function (response) {\n      if (response.status == 201) {\n        navigate(`/`);\n      }\n    });\n  };\n\n  return (\n    <section>\n      <div className={`${classes.feedback_form}`}>\n        <Form onSubmit={handleSubmit(onSubmitHandler)}>\n          <div className=\"my-4\">\n            <MyCard border=\"success\">\n              <Card.Header className=\"card-header-text\">Feedback</Card.Header>\n              <Card.Body>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className={`${classes.myFormLabel}`}>Type</Form.Label>\n                  <Form.Select\n                    className=\"shadow-none select-input\"\n                    name=\"type\"\n                    onChange={(e) => inputSelectChangeHandler(e)}\n                  >\n                    <option value=\"BUG\">Bug</option>\n                    <option value=\"PROPOSAL\">Proposal</option>\n                    <option value=\"OTHER\">Other</option>\n                  </Form.Select>\n                </Form.Group>\n                <MyFormGroupInput\n                    label=\"Description\"\n                    name=\"content\"\n                    as=\"textarea\"\n                    errors={errors}\n                    register={register}\n                    validationSchema={{\n                    required: \"âš  This input is required.\",\n                    }}\n                    onChange={inputChangeHandler}\n                />\n              </Card.Body>\n            </MyCard>\n          </div>\n          <div className=\"mt-3\">\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Send Feedback\n            </MyButton>\n          </div>\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default FeedBack;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}