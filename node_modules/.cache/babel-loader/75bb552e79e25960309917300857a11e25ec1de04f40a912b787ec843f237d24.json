{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/PasswordResetConfirm/PasswordResetConfirm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { useForm } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport axios from \"axios\";\nimport profileApi from \"../../services/api/profileApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetConfirm = () => {\n  _s();\n  var _errors$new_password, _errors$re_new_passwo;\n  const params = useParams();\n  const api = axios();\n  const [new_password, setPassword] = useState(\"\");\n  const [re_new_password, setRePassword] = useState(\"\");\n  const handlePasswordResetSubmit = e => {\n    e.preventDefault();\n    console.log({\n      uid: params.uid,\n      token: params.token,\n      new_password: new_password,\n      re_new_password: re_new_password\n    });\n    const response = profileApi.resetPasswordConfirm(api, {\n      uid: params.uid,\n      token: params.token,\n      new_password: new_password,\n      re_new_password: re_new_password\n    });\n  };\n  const newPasswordHandler = () => {\n    setPassword(e.target.value);\n    setValue(\"new_password\", e.target.value);\n  };\n  const newRePasswordHandler = () => {\n    setValue();\n  };\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log_div position-absolute top-50 start-50 translate-middle\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(handlePasswordResetSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"new_password\", {\n                required: \"⚠ This input is required.\"\n              }),\n              className: \"shadow-none my_log_input\",\n              onChange: e => newPasswordHandler(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), errors.new_password && /*#__PURE__*/_jsxDEV(\"p\", {\n              role: \"alert\",\n              children: (_errors$new_password = errors.new_password) === null || _errors$new_password === void 0 ? void 0 : _errors$new_password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              ...register(\"re_new_password\", {\n                required: \"⚠ This input is required.\",\n                validate: value => {\n                  const {\n                    new_password\n                  } = getValues();\n                  return new_password === value || \"⚠ Passwords should match!\";\n                }\n              }),\n              className: \"shadow-none my_log_input\",\n              onChange: e => setRePassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), errors.re_new_password && /*#__PURE__*/_jsxDEV(\"p\", {\n              role: \"alert\",\n              children: (_errors$re_new_passwo = errors.re_new_password) === null || _errors$re_new_passwo === void 0 ? void 0 : _errors$re_new_passwo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            additionalCl: \"btn-md\",\n            type: \"submit\",\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetConfirm, \"MXnXW24Gl4nN/3H8OwnUzvJsRdk=\", false, function () {\n  return [useParams, useForm];\n});\n_c = PasswordResetConfirm;\nexport default PasswordResetConfirm;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetConfirm\");","map":{"version":3,"names":["React","useState","useParams","Form","useForm","MyButton","axios","profileApi","PasswordResetConfirm","params","api","new_password","setPassword","re_new_password","setRePassword","handlePasswordResetSubmit","e","preventDefault","console","log","uid","token","response","resetPasswordConfirm","newPasswordHandler","target","value","setValue","newRePasswordHandler","register","handleSubmit","getValues","formState","errors","mode","required","message","validate"],"sources":["/home/indiora/ATS/frontend/src/pages/PasswordResetConfirm/PasswordResetConfirm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport { useForm } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport axios from \"axios\";\nimport profileApi from \"../../services/api/profileApi\";\n\nconst PasswordResetConfirm = () => {\n  const params = useParams();\n  const api = axios()\n  const [new_password, setPassword] = useState(\"\");\n  const [re_new_password, setRePassword] = useState(\"\");\n\n  const handlePasswordResetSubmit = (e) => {\n    e.preventDefault();\n    console.log({\n      uid: params.uid,\n      token: params.token,\n      new_password: new_password,\n      re_new_password: re_new_password,\n    });\n    const response = profileApi.resetPasswordConfirm(api, {\n      uid: params.uid,\n      token: params.token,\n      new_password: new_password,\n      re_new_password: re_new_password,\n    });\n  };\n\n  const newPasswordHandler = () => {\n    setPassword(e.target.value)\n    setValue(\"new_password\", e.target.value)\n  }\n\n  const newRePasswordHandler = () => {\n    setValue()\n  }\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  return (\n    <section>\n      <div>\n        <div className=\"log_div position-absolute top-50 start-50 translate-middle\">\n          <Form onSubmit={handleSubmit(handlePasswordResetSubmit)}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                {...register(\"new_password\", {\n                  required: \"⚠ This input is required.\",\n                })}\n                className=\"shadow-none my_log_input\"\n                onChange={(e) => newPasswordHandler(e)}\n              />\n              {errors.new_password && (\n                <p role=\"alert\">{errors.new_password?.message}</p>\n              )}\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Confirm password</Form.Label>\n              <Form.Control\n                type=\"text\"\n                {...register(\"re_new_password\", {\n                  required: \"⚠ This input is required.\",\n                  validate: (value) => {\n                    const { new_password } = getValues();\n                    return (\n                      new_password === value || \"⚠ Passwords should match!\"\n                    );\n                  },\n                })}\n                className=\"shadow-none my_log_input\"\n                onChange={(e) => setRePassword(e.target.value)}\n              />\n              {errors.re_new_password && (\n                <p role=\"alert\">{errors.re_new_password?.message}</p>\n              )}\n            </Form.Group>\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Отправить\n            </MyButton>\n          </Form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PasswordResetConfirm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,+BAA+B;AAAC;AAEvD,MAAMC,oBAAoB,GAAG,MAAM;EAAA;EAAA;EACjC,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAMQ,GAAG,GAAGJ,KAAK,EAAE;EACnB,MAAM,CAACK,YAAY,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,eAAe,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAErD,MAAMc,yBAAyB,GAAIC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC;MACVC,GAAG,EAAEX,MAAM,CAACW,GAAG;MACfC,KAAK,EAAEZ,MAAM,CAACY,KAAK;MACnBV,YAAY,EAAEA,YAAY;MAC1BE,eAAe,EAAEA;IACnB,CAAC,CAAC;IACF,MAAMS,QAAQ,GAAGf,UAAU,CAACgB,oBAAoB,CAACb,GAAG,EAAE;MACpDU,GAAG,EAAEX,MAAM,CAACW,GAAG;MACfC,KAAK,EAAEZ,MAAM,CAACY,KAAK;MACnBV,YAAY,EAAEA,YAAY;MAC1BE,eAAe,EAAEA;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,kBAAkB,GAAG,MAAM;IAC/BZ,WAAW,CAACI,CAAC,CAACS,MAAM,CAACC,KAAK,CAAC;IAC3BC,QAAQ,CAAC,cAAc,EAAEX,CAAC,CAACS,MAAM,CAACC,KAAK,CAAC;EAC1C,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAM;IACjCD,QAAQ,EAAE;EACZ,CAAC;EAED,MAAM;IACJE,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTJ,QAAQ;IACRK,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAG7B,OAAO,CAAC;IAAE8B,IAAI,EAAE;EAAS,CAAC,CAAC;EAE/B,oBACE;IAAA,uBACE;MAAA,uBACE;QAAK,SAAS,EAAC,4DAA4D;QAAA,uBACzE,QAAC,IAAI;UAAC,QAAQ,EAAEJ,YAAY,CAACf,yBAAyB,CAAE;UAAA,wBACtD,QAAC,IAAI,CAAC,KAAK;YAAC,SAAS,EAAC,MAAM;YAAA,wBAC1B,QAAC,IAAI,CAAC,KAAK;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAsB,eACjC,QAAC,IAAI,CAAC,OAAO;cACX,IAAI,EAAC,MAAM;cAAA,GACPc,QAAQ,CAAC,cAAc,EAAE;gBAC3BM,QAAQ,EAAE;cACZ,CAAC,CAAC;cACF,SAAS,EAAC,0BAA0B;cACpC,QAAQ,EAAGnB,CAAC,IAAKQ,kBAAkB,CAACR,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA,QACvC,EACDiB,MAAM,CAACtB,YAAY,iBAClB;cAAG,IAAI,EAAC,OAAO;cAAA,kCAAEsB,MAAM,CAACtB,YAAY,yDAAnB,qBAAqByB;YAAO;cAAA;cAAA;cAAA;YAAA,QAC9C;UAAA;YAAA;YAAA;YAAA;UAAA,QACU,eACb,QAAC,IAAI,CAAC,KAAK;YAAC,SAAS,EAAC,MAAM;YAAA,wBAC1B,QAAC,IAAI,CAAC,KAAK;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAA8B,eACzC,QAAC,IAAI,CAAC,OAAO;cACX,IAAI,EAAC,MAAM;cAAA,GACPP,QAAQ,CAAC,iBAAiB,EAAE;gBAC9BM,QAAQ,EAAE,2BAA2B;gBACrCE,QAAQ,EAAGX,KAAK,IAAK;kBACnB,MAAM;oBAAEf;kBAAa,CAAC,GAAGoB,SAAS,EAAE;kBACpC,OACEpB,YAAY,KAAKe,KAAK,IAAI,2BAA2B;gBAEzD;cACF,CAAC,CAAC;cACF,SAAS,EAAC,0BAA0B;cACpC,QAAQ,EAAGV,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACS,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAC/C,EACDO,MAAM,CAACpB,eAAe,iBACrB;cAAG,IAAI,EAAC,OAAO;cAAA,mCAAEoB,MAAM,CAACpB,eAAe,0DAAtB,sBAAwBuB;YAAO;cAAA;cAAA;cAAA;YAAA,QACjD;UAAA;YAAA;YAAA;YAAA;UAAA,QACU,eACb,QAAC,QAAQ;YAAC,YAAY,EAAE,QAAS;YAAC,IAAI,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEpC;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,GAtFI5B,oBAAoB;EAAA,QACTN,SAAS,EAoCpBE,OAAO;AAAA;AAAA,KArCPI,oBAAoB;AAwF1B,eAAeA,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}