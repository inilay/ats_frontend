{"ast":null,"code":"import { API_SERVER } from \"../../Variables\";\nconst tournamentApi = {\n  getAllTournaments: async function (api) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let title = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    let game = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n    const response = await api.get(`${API_SERVER}/tournaments/`, {\n      params: {\n        limit: limit,\n        offset: (page - 1) * limit,\n        title: title,\n        game: game\n      }\n    });\n    return response;\n  },\n  getTournamentBySlug: async (api, slug) => {\n    const response = await api.get(`${API_SERVER}/tournament/${slug}/`);\n    return response;\n  },\n  createTournament: async (api, responseBody) => {\n    const response = await api.post(`${API_SERVER}/create_tournament/`, responseBody, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  },\n  createModerator: async (api, data) => api.post(`${API_SERVER}/create_moderator/`, data),\n  deleteModerator: async (api, data) => api.delete(`${API_SERVER}/delete_moderator/`, data)\n};\nexport default tournamentApi;","map":{"version":3,"names":["API_SERVER","tournamentApi","getAllTournaments","api","limit","page","title","game","response","get","params","offset","getTournamentBySlug","slug","createTournament","responseBody","post","headers","validateStatus","status","createModerator","data","deleteModerator","delete"],"sources":["/home/indiora/ATS/frontend/src/services/api/tournamentApi.js"],"sourcesContent":["import { API_SERVER } from \"../../Variables\";\n\nconst tournamentApi = {\n    getAllTournaments: async (api, limit = 12, page = 1, title = \"\", game = \"\") => {\n        const response = await api.get(`${API_SERVER}/tournaments/`, {\n            params: {\n                limit: limit,\n                offset: (page - 1) * limit,\n                title: title,\n                game: game,\n            },\n        });\n        return response;\n    },\n    getTournamentBySlug: async (api, slug) => {\n        const response = await api.get(`${API_SERVER}/tournament/${slug}/`);\n        return response;\n    },\n    createTournament: async (api, responseBody) => {\n        const response = await api.post(`${API_SERVER}/create_tournament/`, responseBody, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            validateStatus: function (status) {\n                return status == 201;\n            },\n        });\n        return response;\n    },\n\n    createModerator: async (api, data) => api.post(`${API_SERVER}/create_moderator/`, data),\n    deleteModerator: async (api, data) => api.delete(`${API_SERVER}/delete_moderator/`, data),\n};\n\nexport default tournamentApi;\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,aAAa,GAAG;EAClBC,iBAAiB,EAAE,gBAAOC,GAAG,EAAkD;IAAA,IAAhDC,KAAK,uEAAG,EAAE;IAAA,IAAEC,IAAI,uEAAG,CAAC;IAAA,IAAEC,KAAK,uEAAG,EAAE;IAAA,IAAEC,IAAI,uEAAG,EAAE;IACtE,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAE,GAAET,UAAW,eAAc,EAAE;MACzDU,MAAM,EAAE;QACJN,KAAK,EAAEA,KAAK;QACZO,MAAM,EAAE,CAACN,IAAI,GAAG,CAAC,IAAID,KAAK;QAC1BE,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACV;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ;EACnB,CAAC;EACDI,mBAAmB,EAAE,OAAOT,GAAG,EAAEU,IAAI,KAAK;IACtC,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAE,GAAET,UAAW,eAAca,IAAK,GAAE,CAAC;IACnE,OAAOL,QAAQ;EACnB,CAAC;EACDM,gBAAgB,EAAE,OAAOX,GAAG,EAAEY,YAAY,KAAK;IAC3C,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAE,GAAEhB,UAAW,qBAAoB,EAAEe,YAAY,EAAE;MAC9EE,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,cAAc,EAAE,UAAUC,MAAM,EAAE;QAC9B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IACF,OAAOX,QAAQ;EACnB,CAAC;EAEDY,eAAe,EAAE,OAAOjB,GAAG,EAAEkB,IAAI,KAAKlB,GAAG,CAACa,IAAI,CAAE,GAAEhB,UAAW,oBAAmB,EAAEqB,IAAI,CAAC;EACvFC,eAAe,EAAE,OAAOnB,GAAG,EAAEkB,IAAI,KAAKlB,GAAG,CAACoB,MAAM,CAAE,GAAEvB,UAAW,oBAAmB,EAAEqB,IAAI;AAC5F,CAAC;AAED,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}