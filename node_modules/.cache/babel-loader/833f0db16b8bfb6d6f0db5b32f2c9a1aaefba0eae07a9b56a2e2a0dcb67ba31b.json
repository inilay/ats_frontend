{"ast":null,"code":"var _jsxFileName = \"/home/at/vercel_frontend/ATS/frontend/src/pages/PasswordReset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport PostService from \"../API/PostService\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const handleResetSubmit = () => {\n    const response = PostService.resetPassword(email);\n  };\n  const [email, setEmail] = useState({\n    email: \"\"\n  });\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setEmail({\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log_div position-absolute top-50 start-50 translate-middle\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(handleResetSubmit),\n          children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n            label: \"Email\",\n            name: \"email\",\n            errors: errors,\n            register: register,\n            validationSchema: {\n              required: \"⚠ This input is required.\",\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"⚠ Invalid email.\"\n              }\n            },\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n            additionalCl: \"btn-md\",\n            type: \"submit\",\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"rea8mgchdMhA1bAVVXzzrN2ny4A=\", false, function () {\n  return [useForm];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","Form","PostService","useForm","MyFormGroupInput","MyButton","PasswordReset","handleResetSubmit","response","resetPassword","email","setEmail","inputChangeHandler","inputValue","name","value","register","handleSubmit","formState","errors","mode","required","pattern","message"],"sources":["/home/at/vercel_frontend/ATS/frontend/src/pages/PasswordReset.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport PostService from \"../API/PostService\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\n\nconst PasswordReset = () => {\n  const handleResetSubmit = () => {\n    const response = PostService.resetPassword(email);\n  };\n\n  const [email, setEmail] = useState({ email: \"\" });\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setEmail({ [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  return (\n    <section>\n      <div>\n        <div className=\"log_div position-absolute top-50 start-50 translate-middle\">\n          <Form onSubmit={handleSubmit(handleResetSubmit)}>\n            <MyFormGroupInput\n              label=\"Email\"\n              name=\"email\"\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n                pattern: {\n                  value:\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  message: \"⚠ Invalid email.\",\n                },\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Отправить\n            </MyButton>\n          </Form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PasswordReset;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,gBAAgB,MAAM,oDAAoD;AACjF,OAAOC,QAAQ,MAAM,oCAAoC;AAAC;AAE1D,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAMC,iBAAiB,GAAG,MAAM;IAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAACO,aAAa,CAACC,KAAK,CAAC;EACnD,CAAC;EAED,MAAM,CAACA,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IAAEU,KAAK,EAAE;EAAG,CAAC,CAAC;EAEjD,MAAME,kBAAkB,GAAIC,UAAU,IAAK;IACzC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,UAAU;IAClCF,QAAQ,CAAC;MAAE,CAACG,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7B,CAAC;EAED,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGhB,OAAO,CAAC;IAAEiB,IAAI,EAAE;EAAS,CAAC,CAAC;EAE/B,oBACE;IAAA,uBACE;MAAA,uBACE;QAAK,SAAS,EAAC,4DAA4D;QAAA,uBACzE,QAAC,IAAI;UAAC,QAAQ,EAAEH,YAAY,CAACV,iBAAiB,CAAE;UAAA,wBAC9C,QAAC,gBAAgB;YACf,KAAK,EAAC,OAAO;YACb,IAAI,EAAC,OAAO;YACZ,MAAM,EAAEY,MAAO;YACf,QAAQ,EAAEH,QAAS;YACnB,gBAAgB,EAAE;cAChBK,QAAQ,EAAE,2BAA2B;cACrCC,OAAO,EAAE;gBACPP,KAAK,EACH,uJAAuJ;gBACzJQ,OAAO,EAAE;cACX;YACF,CAAE;YACF,QAAQ,EAAEX;UAAmB;YAAA;YAAA;YAAA;UAAA,QACX,eACpB,QAAC,QAAQ;YAAC,YAAY,EAAE,QAAS;YAAC,IAAI,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEpC;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,GA9CIN,aAAa;EAAA,QAgBbH,OAAO;AAAA;AAAA,KAhBPG,aAAa;AAgDnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}