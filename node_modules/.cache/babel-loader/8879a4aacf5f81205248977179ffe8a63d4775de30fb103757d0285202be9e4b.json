{"ast":null,"code":"const API_SERVER = \"http://127.0.0.1:8000/api/v1\";\nconst tournamentApi = {\n  getAllTournaments: async function (api) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 12;\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let title = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    let game = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n    const response = await api.get(`${API_SERVER}/tournaments/`, {\n      params: {\n        limit: limit,\n        offset: (page - 1) * limit,\n        title: title,\n        game: game\n      }\n    });\n    return response;\n  },\n  getTournamentBySlug: async (api, slug) => {\n    const response = await api.get(`${API_SERVER}/tournament/${slug}/`);\n    return response;\n  },\n  createTournament: async (api, responseBody) => {\n    const response = await api.post(`${API_SERVER}/create_tournament/`, responseBody, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  },\n  createModerator: async (api, data) => api.post(`${API_SERVER}/create_moderator/`, data),\n  deleteModerator: async (api, data) => api.delete(`${API_SERVER}/delete_moderator/`, data)\n};\nexport default tournamentApi;","map":{"version":3,"names":["API_SERVER","tournamentApi","getAllTournaments","api","limit","page","title","game","response","get","params","offset","getTournamentBySlug","slug","createTournament","responseBody","post","headers","validateStatus","status","createModerator","data","deleteModerator","delete"],"sources":["/home/indiora/ATS/frontend/src/services/api/tournamentApi.js"],"sourcesContent":["const API_SERVER = \"http://127.0.0.1:8000/api/v1\"\n\n\nconst tournamentApi = {\n    getAllTournaments: async (api, limit=12, page=1, title=\"\", game=\"\") => {\n        const response = await api.get(`${API_SERVER}/tournaments/`, \n        {params: {\n            limit: limit,\n            offset: (page-1)*limit,\n            title: title,\n            game: game\n        }})\n        return  response\n    },\n    getTournamentBySlug: async (api, slug) => {\n\n        const response = await api.get(`${API_SERVER}/tournament/${slug}/`)\n        return  response\n    },\n    createTournament: async (api, responseBody) => {\n        const response = await api.post(`${API_SERVER}/create_tournament/`, responseBody,       {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n            validateStatus: function (status) {\n                return status == 201;\n            },\n          })\n        return  response\n    },\n\n    createModerator: async (api, data) =>  api.post(`${API_SERVER}/create_moderator/`, data),\n    deleteModerator: async (api, data) =>  api.delete(`${API_SERVER}/delete_moderator/`, data),\n    \n}\n\nexport default tournamentApi"],"mappings":"AAAA,MAAMA,UAAU,GAAG,8BAA8B;AAGjD,MAAMC,aAAa,GAAG;EAClBC,iBAAiB,EAAE,gBAAOC,GAAG,EAA0C;IAAA,IAAxCC,KAAK,uEAAC,EAAE;IAAA,IAAEC,IAAI,uEAAC,CAAC;IAAA,IAAEC,KAAK,uEAAC,EAAE;IAAA,IAAEC,IAAI,uEAAC,EAAE;IAC9D,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAE,GAAET,UAAW,eAAc,EAC3D;MAACU,MAAM,EAAE;QACLN,KAAK,EAAEA,KAAK;QACZO,MAAM,EAAE,CAACN,IAAI,GAAC,CAAC,IAAED,KAAK;QACtBE,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACV;IAAC,CAAC,CAAC;IACH,OAAQC,QAAQ;EACpB,CAAC;EACDI,mBAAmB,EAAE,OAAOT,GAAG,EAAEU,IAAI,KAAK;IAEtC,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAE,GAAET,UAAW,eAAca,IAAK,GAAE,CAAC;IACnE,OAAQL,QAAQ;EACpB,CAAC;EACDM,gBAAgB,EAAE,OAAOX,GAAG,EAAEY,YAAY,KAAK;IAC3C,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACa,IAAI,CAAE,GAAEhB,UAAW,qBAAoB,EAAEe,YAAY,EAAQ;MACpFE,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,cAAc,EAAE,UAAUC,MAAM,EAAE;QAC9B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACF,CAAC,CAAC;IACJ,OAAQX,QAAQ;EACpB,CAAC;EAEDY,eAAe,EAAE,OAAOjB,GAAG,EAAEkB,IAAI,KAAMlB,GAAG,CAACa,IAAI,CAAE,GAAEhB,UAAW,oBAAmB,EAAEqB,IAAI,CAAC;EACxFC,eAAe,EAAE,OAAOnB,GAAG,EAAEkB,IAAI,KAAMlB,GAAG,CAACoB,MAAM,CAAE,GAAEvB,UAAW,oBAAmB,EAAEqB,IAAI;AAE7F,CAAC;AAED,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}