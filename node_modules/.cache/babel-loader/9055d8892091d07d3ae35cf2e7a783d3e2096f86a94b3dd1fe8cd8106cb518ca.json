{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm, setValue } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport Card from \"react-bootstrap/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    loginUser\n  } = useContext(AuthContext);\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleLoginSubmit = () => {\n    loginUser(state.email, state.password);\n  };\n  const inputChangeHandler = inputValue => {\n    console.log(\"inputValue\", inputValue);\n    const {\n      name,\n      value\n    } = inputValue;\n    setState({\n      ...state,\n      [name]: value\n    });\n    setValue(name, value);\n  };\n  const {\n    register,\n    handleSubmit,\n    control,\n    trigger,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\",\n    defaultValues: {\n      email: \"\",\n      password: \"\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.login_form}`,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(handleLoginSubmit),\n          children: [/*#__PURE__*/_jsxDEV(MyCard, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"card-header-text\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Email\",\n                name: \"email\",\n                trigger: trigger,\n                control: control,\n                defaultValue: state.email,\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  required: \"⚠ This input is required.\",\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"⚠ Invalid email.\"\n                  }\n                },\n                onChange: inputChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Password\",\n                type: \"password\",\n                name: \"password\",\n                trigger: trigger,\n                control: control,\n                defaultValue: state.password,\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  required: \"⚠ This input is required.\"\n                },\n                onChange: inputChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/password_reset\",\n                  children: \"Forgot password ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: \"btn-md\",\n              type: \"submit\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"r1OI1uArA+0tjcAK7ET5sklmvg4=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","AuthContext","Form","useState","MyFormGroupInput","useForm","setValue","MyButton","MyCard","Card","classes","Login","loginUser","state","setState","email","password","handleLoginSubmit","inputChangeHandler","inputValue","console","log","name","value","register","handleSubmit","control","trigger","formState","errors","mode","defaultValues","login_form","required","pattern","message"],"sources":["/home/indiora/ATS/frontend/src/pages/Login/Login.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm, setValue } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport Card from \"react-bootstrap/Card\";\nimport classes from \"./Login.module.css\";\n\n\nconst Login = () => {\n  const { loginUser } = useContext(AuthContext);\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  const handleLoginSubmit = () => {\n    loginUser(state.email, state.password);\n  };\n\n  const inputChangeHandler = (inputValue) => {\n    console.log(\"inputValue\", inputValue);\n    const { name, value } = inputValue;\n    \n    \n    setState({ ...state, [name]: value });\n    setValue(name, value)\n  };\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    trigger,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\", defaultValues: {email: \"\", password: \"\"} });\n\n  return (\n    <section>\n      <div>\n        <div className={`${classes.login_form}`}>\n          <Form onSubmit={handleSubmit(handleLoginSubmit)}>\n          <MyCard>\n            <Card.Header className=\"card-header-text\">Log in</Card.Header>\n            <Card.Body>\n            <MyFormGroupInput\n              label=\"Email\"\n              name=\"email\"\n              trigger={trigger}\n              control={control}\n              defaultValue={state.email}\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n                pattern: {\n                  value:\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                  message: \"⚠ Invalid email.\",\n                },\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <MyFormGroupInput\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              trigger={trigger}\n              control={control}\n              defaultValue={state.password}\n              errors={errors}\n              register={register}\n              validationSchema={{\n                required: \"⚠ This input is required.\",\n              }}\n              onChange={inputChangeHandler}\n            ></MyFormGroupInput>\n            <p>\n              <a href=\"/password_reset\">Forgot password ?</a>\n            </p>\n            </Card.Body>\n          </MyCard>\n          <div className='mt-3'>\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Log in\n            </MyButton>\n          </div>\n          </Form>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}