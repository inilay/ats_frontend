{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm, set } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport Card from \"react-bootstrap/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    loginUser\n  } = useContext(AuthContext);\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleLoginSubmit = () => {\n    loginUser(state.email, state.password);\n  };\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setState({\n      ...state,\n      [name]: value\n    });\n    setValue(name, value);\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.login_form}`,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(handleLoginSubmit),\n          children: [/*#__PURE__*/_jsxDEV(MyCard, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"card-header-text\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Email\",\n                name: \"email\",\n                defaultValue: state.email,\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  required: \"⚠ This input is required.\",\n                  pattern: {\n                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"⚠ Invalid email.\"\n                  }\n                },\n                onChange: inputChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Password\",\n                type: \"password\",\n                name: \"password\",\n                defaultValue: state.password,\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  required: \"⚠ This input is required.\"\n                },\n                onChange: inputChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/password_reset\",\n                  children: \"Forgot password ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: \"btn-md\",\n              type: \"submit\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"2xnrYugkCzYVrvzSpjdhTav1K4M=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","AuthContext","Form","useState","MyFormGroupInput","useForm","set","MyButton","MyCard","Card","classes","Login","loginUser","state","setState","email","password","handleLoginSubmit","inputChangeHandler","inputValue","name","value","setValue","register","handleSubmit","formState","errors","mode","login_form","required","pattern","message"],"sources":["/home/indiora/ATS/frontend/src/pages/Login/Login.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { AuthContext } from \"../../context\";\nimport Form from \"react-bootstrap/Form\";\nimport { useState } from \"react\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm, set } from \"react-hook-form\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport Card from \"react-bootstrap/Card\";\nimport classes from \"./Login.module.css\";\n\nconst Login = () => {\n    const { loginUser } = useContext(AuthContext);\n    const [state, setState] = useState({ email: \"\", password: \"\" });\n\n    const handleLoginSubmit = () => {\n        loginUser(state.email, state.password);\n    };\n\n    const inputChangeHandler = (inputValue) => {\n        const { name, value } = inputValue;\n        setState({ ...state, [name]: value });\n        setValue(name, value);\n    };\n\n    const {\n        register,\n        handleSubmit,\n        setValue,\n        formState: { errors },\n    } = useForm({ mode: \"onBlur\" });\n\n    return (\n        <section>\n            <div>\n                <div className={`${classes.login_form}`}>\n                    <Form onSubmit={handleSubmit(handleLoginSubmit)}>\n                        <MyCard>\n                            <Card.Header className=\"card-header-text\">Log in</Card.Header>\n                            <Card.Body>\n                                <MyFormGroupInput\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    defaultValue={state.email}\n                                    errors={errors}\n                                    register={register}\n                                    validationSchema={{\n                                        required: \"⚠ This input is required.\",\n                                        pattern: {\n                                            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                            message: \"⚠ Invalid email.\",\n                                        },\n                                    }}\n                                    onChange={inputChangeHandler}\n                                ></MyFormGroupInput>\n                                <MyFormGroupInput\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    defaultValue={state.password}\n                                    errors={errors}\n                                    register={register}\n                                    validationSchema={{\n                                        required: \"⚠ This input is required.\",\n                                    }}\n                                    onChange={inputChangeHandler}\n                                ></MyFormGroupInput>\n                                <p>\n                                    <a href=\"/password_reset\">Forgot password ?</a>\n                                </p>\n                            </Card.Body>\n                        </MyCard>\n                        <div className=\"mt-3\">\n                            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n                                Log in\n                            </MyButton>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}