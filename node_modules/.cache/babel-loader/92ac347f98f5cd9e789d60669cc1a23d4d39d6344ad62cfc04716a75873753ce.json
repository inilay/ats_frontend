{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/Brackets/SE/SingleElimination.jsx\";\nimport { useState, useContext, Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport MatchInfoIcon from \"../../../assets/svg/MatchInfoIcon\";\nimport MatchJudgeIcon from \"../../../assets/svg/MatchJudgeIcon\";\nimport classes from \"./SingleElimination.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleElimination = _ref => {\n  let {\n    bracket\n  } = _ref;\n  // bracket [ \n  //   round [ \n  //     match [\n\n  //     ]\n  //   ]\n  // ]\n  // const [bracket, setBracket] = useState([ [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}]],\n  //                                         //  [ [{'name': 'Bill'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Add'}] ]\n  //                                         ]);\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  const t = 2;\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   // [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  console.log('bracket', bracket);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.bracket}`,\n      children: bracket.map(round => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.column}`,\n          children: round.matches.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.match}`,\n            children: [match.info.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.team}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.name}`,\n                children: team.participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.score}`,\n                children: team.participant_scoore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.button_container,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.icon_button,\n                children: /*#__PURE__*/_jsxDEV(MatchInfoIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.icon_button,\n                children: /*#__PURE__*/_jsxDEV(MatchJudgeIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.match_lines}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.line} ${classes.one}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.match_lines} ${classes.alt}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.line} ${classes.one}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), round.matches.length >= 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.column_lines_wrapper}`,\n          children: [...Array.from(Array(round.matches.length).keys())].map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${round.matches.length > 2 && (i % t === 0 || i % t === t - 1) ? i % t === 0 ? classes.column_lines_first : classes.column_lines_last : classes.column_lines}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = SingleElimination;\nexport default SingleElimination;\nvar _c;\n$RefreshReg$(_c, \"SingleElimination\");","map":{"version":3,"names":["useState","useContext","Fragment","useForm","useNavigate","MatchInfoIcon","MatchJudgeIcon","classes","SingleElimination","bracket","t","console","log","map","round","column","matches","match","info","team","name","participant","score","participant_scoore","button_container","icon_button","match_lines","line","one","alt","length","column_lines_wrapper","Array","from","keys","num","i","column_lines_first","column_lines_last","column_lines"],"sources":["/home/indiora/ATS/frontend/src/components/Brackets/SE/SingleElimination.jsx"],"sourcesContent":["import { useState, useContext, Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport MatchInfoIcon from \"../../../assets/svg/MatchInfoIcon\";\nimport MatchJudgeIcon from \"../../../assets/svg/MatchJudgeIcon\";\nimport classes from \"./SingleElimination.module.css\";\n\n\nconst SingleElimination = ({bracket}) => {\n  // bracket [ \n  //   round [ \n  //     match [\n\n  //     ]\n  //   ]\n  // ]\n  // const [bracket, setBracket] = useState([ [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}]],\n  //                                         //  [ [{'name': 'Bill'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Add'}] ]\n  //                                         ]);\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  const t = 2\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   // [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  console.log('bracket', bracket);\n\n  return (\n    <div>\n      <div className={`${classes.bracket}`}>\n        {bracket.map((round) => (\n          <Fragment>\n          <div className={`${classes.column}`}>\n          { round.matches.map((match) => (\n              <div className={`${classes.match}`}>\n                {\n                  match.info.map((team) => (\n                    <div className={`${classes.team}`}>\n                      <div className={`${classes.name}`}>{team.participant}</div>\n                      <div className={`${classes.score}`}>{team.participant_scoore}</div>\n                    </div>\n                  ))\n                }\n                <div className={classes.button_container}>\n                  <button\n                    className={classes.icon_button}\n                  >\n                    <MatchInfoIcon />\n                  </button>\n                  <button\n                    className={classes.icon_button}\n                  >\n                    <MatchJudgeIcon />\n                  </button>\n                </div>\n                <div className={`${classes.match_lines}`}>\n                  <div className={`${classes.line} ${classes.one}`}></div>\n                </div>\n                <div className={`${classes.match_lines} ${classes.alt}`}>\n                  <div className={`${classes.line} ${classes.one}`}></div>\n                </div>\n              </div>\n          )\n          )}\n          </div>\n          {round.matches.length >= 2 &&\n            <div className={`${classes.column_lines_wrapper}`}>\n              {[...Array.from(Array(round.matches.length).keys())].map((num, i) => \n                <div \n                  className={`${(round.matches.length > 2 && (i % t === 0 || i % t === t-1)) ? i % t === 0 ? classes.column_lines_first : classes.column_lines_last : classes.column_lines}`}\n                  >\n                </div>)}\n            </div>\n          }\n        </Fragment>\n        )\n\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SingleElimination;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}