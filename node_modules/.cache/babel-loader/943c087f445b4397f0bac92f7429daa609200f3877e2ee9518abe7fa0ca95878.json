{"ast":null,"code":"import useAxios from \"./useAxios\";\nimport axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:49088/api/v1\";\nexport default class PostService {\n  static async getAllTournaments() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 12;\n    let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let game = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n    const response = await axios.get(`${baseURL}/tournaments/`, {\n      params: {\n        limit: limit,\n        offset: (page - 1) * limit,\n        title: title,\n        game: game\n      }\n    });\n    return response;\n  }\n  static async getAllGames() {\n    const response = await axios.get(`${baseURL}/games/`);\n    return response;\n  }\n  static async getTournamentBySlug(slug) {\n    const response = await axios.get(`${baseURL}/tournament/${slug}/`);\n    return response;\n  }\n  static async createTournament(responseBody) {\n    const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  }\n  static async getProfileBySlug(slug) {\n    const response = await axios.get(`${baseURL}/profile/${slug}/`);\n    return response;\n  }\n  static async getBracketById(id) {\n    const response = await axios.get(`${baseURL}/bracket/${id}/`);\n    return response;\n  }\n  static async createBracket(responseBody) {\n    const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  }\n  static async allTournamentBrackets(slug) {\n    const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`);\n    return response;\n  }\n  static async resetPassword(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset/`, responseBody);\n    return response;\n  }\n  static async resetPasswordConfirm(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody);\n    return response;\n  }\n}","map":{"version":3,"names":["useAxios","axios","baseURL","PostService","getAllTournaments","limit","page","title","game","response","get","params","offset","getAllGames","getTournamentBySlug","slug","createTournament","responseBody","post","validateStatus","status","getProfileBySlug","getBracketById","id","createBracket","allTournamentBrackets","resetPassword","resetPasswordConfirm"],"sources":["/home/indiora/ATS/frontend/src/API/PostService.js"],"sourcesContent":["import useAxios from \"./useAxios\";\nimport axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:49088/api/v1\";\n\n\nexport default class PostService {\n\n    static async getAllTournaments(limit=12, page=1, title=\"\", game=\"\") {\n      \n        const response = await axios.get(`${baseURL}/tournaments/`, \n        {params: {\n            limit: limit,\n            offset: (page-1)*limit,\n            title: title,\n            game: game\n        }})\n        return  response\n\n    }\n\n    static async getAllGames() {\n      \n        const response = await axios.get(`${baseURL}/games/`)\n        return  response\n\n    }\n\n\n    static async getTournamentBySlug(slug) {\n\n        const response = await axios.get(`${baseURL}/tournament/${slug}/`)\n        return  response\n\n    }\n\n    static async createTournament(responseBody) {\n\n        const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n\n            validateStatus: function (status) {\n    \n                    return status == 201;\n                },\n            })\n        return  response\n\n    }\n\n    static async getProfileBySlug(slug) {\n\n        const response = await axios.get(`${baseURL}/profile/${slug}/`)\n        return  response\n\n    }\n\n    static async getBracketById(id) {\n\n        const response = await axios.get(`${baseURL}/bracket/${id}/`)\n        return  response\n\n    }\n\n    static async createBracket(responseBody) {\n\n        const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n\n        validateStatus: function (status) {\n\n                return status == 201;\n            },\n        })\n\n        return  response\n\n    }\n\n    static async allTournamentBrackets(slug) {\n\n        const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`)\n        return  response\n\n    }\n\n    static async resetPassword(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset/`, responseBody)\n\n        return  response\n    } \n\n    static async resetPasswordConfirm(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody)\n\n        return  response\n    }\n\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,+BAA+B;AAG/C,eAAe,MAAMC,WAAW,CAAC;EAE7B,aAAaC,iBAAiB,GAAsC;IAAA,IAArCC,KAAK,uEAAC,EAAE;IAAA,IAAEC,IAAI,uEAAC,CAAC;IAAA,IAAEC,KAAK,uEAAC,EAAE;IAAA,IAAEC,IAAI,uEAAC,EAAE;IAE9D,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,eAAc,EAC1D;MAACS,MAAM,EAAE;QACLN,KAAK,EAAEA,KAAK;QACZO,MAAM,EAAE,CAACN,IAAI,GAAC,CAAC,IAAED,KAAK;QACtBE,KAAK,EAAEA,KAAK;QACZC,IAAI,EAAEA;MACV;IAAC,CAAC,CAAC;IACH,OAAQC,QAAQ;EAEpB;EAEA,aAAaI,WAAW,GAAG;IAEvB,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,SAAQ,CAAC;IACrD,OAAQO,QAAQ;EAEpB;EAGA,aAAaK,mBAAmB,CAACC,IAAI,EAAE;IAEnC,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,eAAca,IAAK,GAAE,CAAC;IAClE,OAAQN,QAAQ;EAEpB;EAEA,aAAaO,gBAAgB,CAACC,YAAY,EAAE;IAExC,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAE,GAAEhB,OAAQ,qBAAoB,EAAEe,YAAY,EAAE;MAE7EE,cAAc,EAAE,UAAUC,MAAM,EAAE;QAE1B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IACN,OAAQX,QAAQ;EAEpB;EAEA,aAAaY,gBAAgB,CAACN,IAAI,EAAE;IAEhC,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,YAAWa,IAAK,GAAE,CAAC;IAC/D,OAAQN,QAAQ;EAEpB;EAEA,aAAaa,cAAc,CAACC,EAAE,EAAE;IAE5B,MAAMd,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,YAAWqB,EAAG,GAAE,CAAC;IAC7D,OAAQd,QAAQ;EAEpB;EAEA,aAAae,aAAa,CAACP,YAAY,EAAE;IAErC,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAE,GAAEhB,OAAQ,kBAAiB,EAAEe,YAAY,EAAE;MAE9EE,cAAc,EAAE,UAAUC,MAAM,EAAE;QAE1B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IAEF,OAAQX,QAAQ;EAEpB;EAEA,aAAagB,qBAAqB,CAACV,IAAI,EAAE;IAErC,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAER,OAAQ,wBAAuBa,IAAK,GAAE,CAAC;IAC3E,OAAQN,QAAQ;EAEpB;EAEA,aAAaiB,aAAa,CAACT,YAAY,EAAE;IAErC,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAE,GAAEhB,OAAQ,kBAAiB,EAAEe,YAAY,CAAC;IAE7E,OAAQR,QAAQ;EACpB;EAEA,aAAakB,oBAAoB,CAACV,YAAY,EAAE;IAE5C,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAE,GAAEhB,OAAQ,0BAAyB,EAAEe,YAAY,CAAC;IAErF,OAAQR,QAAQ;EACpB;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}