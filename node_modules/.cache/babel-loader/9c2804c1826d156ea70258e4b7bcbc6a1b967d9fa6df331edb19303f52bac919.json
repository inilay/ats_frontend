{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/Brackets/RR/RoundRobin.jsx\";\nimport { useState, useContext, Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"./RoundRobin.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundRobin = _ref => {\n  let {\n    bracket\n  } = _ref;\n  // bracket [ \n  //   round [ \n  //     match [\n\n  //     ]\n  //   ]\n  // ]\n  // const [bracket, setBracket] = useState([ [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}]],\n  //                                         //  [ [{'name': 'Bill'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Add'}] ]\n  //                                         ]);\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  const t = 2;\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   // [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  console.log('bracket', bracket);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.bracket}`,\n      children: bracket.map(round => /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes.row}`,\n          children: round.matches.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${classes.match}`,\n            children: [match.info.map(team => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.team}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${classes.name}`,\n                children: team.participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${classes.score}`,\n                children: team.participant_scoore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.match_lines}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.line} ${classes.one}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${classes.match_lines} ${classes.alt}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.line} ${classes.one}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = RoundRobin;\nexport default RoundRobin;\nvar _c;\n$RefreshReg$(_c, \"RoundRobin\");","map":{"version":3,"names":["useState","useContext","Fragment","useForm","useNavigate","classes","RoundRobin","bracket","t","console","log","map","round","row","matches","match","info","team","name","participant","score","participant_scoore","match_lines","line","one","alt"],"sources":["/home/indiora/ATS/frontend/src/components/Brackets/RR/RoundRobin.jsx"],"sourcesContent":["import { useState, useContext, Fragment } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport classes from \"./RoundRobin.module.css\";\n\n\nconst RoundRobin = ({bracket}) => {\n  // bracket [ \n  //   round [ \n  //     match [\n\n  //     ]\n  //   ]\n  // ]\n  // const [bracket, setBracket] = useState([ [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Tom'}], [{'name': 'Gin'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}]],\n  //                                         //  [ [{'name': 'Bill'}, {'name': 'Add'}], [{'name': 'Bill'}, {'name': 'Add'}] ],\n  //                                          [ [{'name': 'Bill'}, {'name': 'Add'}] ]\n  //                                         ]);\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  const t = 2\n\n  // const [bracket, setBracket] = useState([ \n  //   [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},],[{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   // [ [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'}, ], [{'name': 'Bill'}, {'name': 'Tom'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Gin'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},], [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Tom'},] ],\n  //   [ [{'name': 'Bill'}, {'name': 'Add'}, {'name': 'Bill'}, {'name': 'Add'}] ]\n  //  ]);\n\n  console.log('bracket', bracket);\n\n  return (\n    <section>\n      <div className={`${classes.bracket}`}>\n        {bracket.map((round) => (\n          <Fragment>\n          <div className={`${classes.row}`}>\n          { round.matches.map((match) => (\n              <div className={`${classes.match}`}>\n                {\n                  match.info.map((team) => (\n                    <div className={`${classes.team}`}>\n                      <span className={`${classes.name}`}>{team.participant}</span>\n                      <span className={`${classes.score}`}>{team.participant_scoore}</span>\n                    </div>\n                  ))\n                }\n                <div className={`${classes.match_lines}`}>\n                  <div className={`${classes.line} ${classes.one}`}></div>\n                </div>\n                <div className={`${classes.match_lines} ${classes.alt}`}>\n                  <div className={`${classes.line} ${classes.one}`}></div>\n                </div>\n              </div>\n          )\n          )}\n          </div>\n        </Fragment>\n        )\n\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default RoundRobin;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAG9C,MAAMC,UAAU,GAAG,QAAe;EAAA,IAAd;IAACC;EAAO,CAAC;EAC3B;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,CAAC,GAAG,CAAC;;EAEX;EACA;EACA;EACA;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,OAAO,CAAC;EAE/B,oBACE;IAAA,uBACE;MAAK,SAAS,EAAG,GAAEF,OAAO,CAACE,OAAQ,EAAE;MAAA,UAClCA,OAAO,CAACI,GAAG,CAAEC,KAAK,iBACjB,QAAC,QAAQ;QAAA,uBACT;UAAK,SAAS,EAAG,GAAEP,OAAO,CAACQ,GAAI,EAAE;UAAA,UAC/BD,KAAK,CAACE,OAAO,CAACH,GAAG,CAAEI,KAAK,iBACtB;YAAK,SAAS,EAAG,GAAEV,OAAO,CAACU,KAAM,EAAE;YAAA,WAE/BA,KAAK,CAACC,IAAI,CAACL,GAAG,CAAEM,IAAI,iBAClB;cAAK,SAAS,EAAG,GAAEZ,OAAO,CAACY,IAAK,EAAE;cAAA,wBAChC;gBAAM,SAAS,EAAG,GAAEZ,OAAO,CAACa,IAAK,EAAE;gBAAA,UAAED,IAAI,CAACE;cAAW;gBAAA;gBAAA;gBAAA;cAAA,QAAQ,eAC7D;gBAAM,SAAS,EAAG,GAAEd,OAAO,CAACe,KAAM,EAAE;gBAAA,UAAEH,IAAI,CAACI;cAAkB;gBAAA;gBAAA;gBAAA;cAAA,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAExE,CAAC,eAEJ;cAAK,SAAS,EAAG,GAAEhB,OAAO,CAACiB,WAAY,EAAE;cAAA,uBACvC;gBAAK,SAAS,EAAG,GAAEjB,OAAO,CAACkB,IAAK,IAAGlB,OAAO,CAACmB,GAAI;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAAO;cAAA;cAAA;cAAA;YAAA,QACpD,eACN;cAAK,SAAS,EAAG,GAAEnB,OAAO,CAACiB,WAAY,IAAGjB,OAAO,CAACoB,GAAI,EAAE;cAAA,uBACtD;gBAAK,SAAS,EAAG,GAAEpB,OAAO,CAACkB,IAAK,IAAGlB,OAAO,CAACmB,GAAI;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAAO;cAAA;cAAA;cAAA;YAAA,QACpD;UAAA;YAAA;YAAA;YAAA;UAAA,QAEX;QACA;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA,QAEP;IAEA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,KAjEIlB,UAAU;AAmEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}