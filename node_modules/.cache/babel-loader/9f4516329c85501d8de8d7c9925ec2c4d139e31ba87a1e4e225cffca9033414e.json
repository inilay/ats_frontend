{"ast":null,"code":"import useAxios from \"./useAxios\";\nimport axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:8000/api/v1\";\nexport default class PostService {\n  // static async sendFeedback(responseBody) {\n  //     const response = await axios.post(`${baseURL}/create_report/`, responseBody, {\n\n  //         validateStatus: function (status) {\n\n  //                 return status == 201;\n  //             },\n  //         })\n  //     return  response\n\n  // }\n\n  // static async getAllTournaments(limit=12, page=1, title=\"\", game=\"\") {\n\n  //     const response = await axios.get(`${baseURL}/tournaments/`, \n  //     {params: {\n  //         limit: limit,\n  //         offset: (page-1)*limit,\n  //         title: title,\n  //         game: game\n  //     }})\n  //     return  response\n\n  // }\n\n  // static async getAllGames() {\n\n  //     const response = await axios.get(`${baseURL}/games/`)\n  //     return  response\n\n  // }\n\n  // static async getTournamentBySlug(slug) {\n\n  //     const response = await axios.get(`${baseURL}/tournament/${slug}/`)\n  //     return  response\n\n  // }\n\n  // static async createTournament(responseBody) {\n\n  //     const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n\n  //         validateStatus: function (status) {\n\n  //                 return status == 201;\n  //             },\n  //         })\n  //     return  response\n\n  // }\n\n  static async getProfileBySlug(slug) {\n    const response = await axios.get(`${baseURL}/profile/${slug}/`);\n    return response;\n  }\n  static async getBracketById(id) {\n    const response = await axios.get(`${baseURL}/bracket/${id}/`);\n    return response;\n  }\n  static async createBracket(responseBody) {\n    const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n      validateStatus: function (status) {\n        return status == 201;\n      }\n    });\n    return response;\n  }\n  static async allTournamentBrackets(slug) {\n    const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`);\n    return response;\n  }\n  static async resetPassword(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset/`, responseBody);\n    return response;\n  }\n  static async resetPasswordConfirm(responseBody) {\n    const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody);\n    return response;\n  }\n}","map":{"version":3,"names":["useAxios","axios","baseURL","PostService","getProfileBySlug","slug","response","get","getBracketById","id","createBracket","responseBody","post","validateStatus","status","allTournamentBrackets","resetPassword","resetPasswordConfirm"],"sources":["/home/indiora/ATS/frontend/src/API/PostService.js"],"sourcesContent":["import useAxios from \"./useAxios\";\nimport axios from \"axios\";\nconst baseURL = \"http://127.0.0.1:8000/api/v1\";\n\n\nexport default class PostService {\n    \n    // static async sendFeedback(responseBody) {\n    //     const response = await axios.post(`${baseURL}/create_report/`, responseBody, {\n\n    //         validateStatus: function (status) {\n    \n    //                 return status == 201;\n    //             },\n    //         })\n    //     return  response\n\n    // }\n\n    // static async getAllTournaments(limit=12, page=1, title=\"\", game=\"\") {\n      \n    //     const response = await axios.get(`${baseURL}/tournaments/`, \n    //     {params: {\n    //         limit: limit,\n    //         offset: (page-1)*limit,\n    //         title: title,\n    //         game: game\n    //     }})\n    //     return  response\n\n    // }\n\n    // static async getAllGames() {\n      \n    //     const response = await axios.get(`${baseURL}/games/`)\n    //     return  response\n\n    // }\n\n\n    // static async getTournamentBySlug(slug) {\n\n    //     const response = await axios.get(`${baseURL}/tournament/${slug}/`)\n    //     return  response\n\n    // }\n\n    // static async createTournament(responseBody) {\n\n    //     const response = await axios.post(`${baseURL}/create_tournament/`, responseBody, {\n\n    //         validateStatus: function (status) {\n    \n    //                 return status == 201;\n    //             },\n    //         })\n    //     return  response\n\n    // }\n\n    static async getProfileBySlug(slug) {\n\n        const response = await axios.get(`${baseURL}/profile/${slug}/`)\n        return  response\n\n    }\n\n    static async getBracketById(id) {\n\n        const response = await axios.get(`${baseURL}/bracket/${id}/`)\n        return  response\n\n    }\n\n    static async createBracket(responseBody) {\n\n        const response = await axios.post(`${baseURL}/create_bracket/`, responseBody, {\n\n        validateStatus: function (status) {\n\n                return status == 201;\n            },\n        })\n\n        return  response\n\n    }\n\n    static async allTournamentBrackets(slug) {\n\n        const response = await axios.get(`${baseURL}/tournament_brackets/${slug}/`)\n        return  response\n\n    }\n\n    static async resetPassword(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset/`, responseBody)\n\n        return  response\n    } \n\n    static async resetPasswordConfirm(responseBody) {\n\n        const response = await axios.post(`${baseURL}/password_reset_confirm/`, responseBody)\n\n        return  response\n    }\n\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,8BAA8B;AAG9C,eAAe,MAAMC,WAAW,CAAC;EAE7B;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;;EAEA;;EAGA;;EAEA;EACA;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA,aAAaC,gBAAgB,CAACC,IAAI,EAAE;IAEhC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,YAAWG,IAAK,GAAE,CAAC;IAC/D,OAAQC,QAAQ;EAEpB;EAEA,aAAaE,cAAc,CAACC,EAAE,EAAE;IAE5B,MAAMH,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,YAAWO,EAAG,GAAE,CAAC;IAC7D,OAAQH,QAAQ;EAEpB;EAEA,aAAaI,aAAa,CAACC,YAAY,EAAE;IAErC,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACW,IAAI,CAAE,GAAEV,OAAQ,kBAAiB,EAAES,YAAY,EAAE;MAE9EE,cAAc,EAAE,UAAUC,MAAM,EAAE;QAE1B,OAAOA,MAAM,IAAI,GAAG;MACxB;IACJ,CAAC,CAAC;IAEF,OAAQR,QAAQ;EAEpB;EAEA,aAAaS,qBAAqB,CAACV,IAAI,EAAE;IAErC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,OAAQ,wBAAuBG,IAAK,GAAE,CAAC;IAC3E,OAAQC,QAAQ;EAEpB;EAEA,aAAaU,aAAa,CAACL,YAAY,EAAE;IAErC,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACW,IAAI,CAAE,GAAEV,OAAQ,kBAAiB,EAAES,YAAY,CAAC;IAE7E,OAAQL,QAAQ;EACpB;EAEA,aAAaW,oBAAoB,CAACN,YAAY,EAAE;IAE5C,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACW,IAAI,CAAE,GAAEV,OAAQ,0BAAyB,EAAES,YAAY,CAAC;IAErF,OAAQL,QAAQ;EACpB;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}