{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/UI/BracketWrapper/BracketWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport MyModal from \"../MyModal/MyModal\";\nimport MyButton from \"../MyButton/MyButton\";\nimport Modal from 'react-bootstrap/Modal';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { toPng, toJpeg, toSvg } from 'html-to-image';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport classes from \"./BracketWrapper.module.css\";\nimport DownloadBracketIcon from \"../../../assets/svg/DownloadBracketIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BracketWrapper = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const ref = useRef(null);\n  const handleFullScreen = useFullScreenHandle();\n  const [modalShow, setModalShow] = useState(false);\n  const filter = node => {\n    const exclusionClasses = ['tools', ''];\n    return !exclusionClasses.some(classname => {\n      var _node$classList;\n      return (_node$classList = node.classList) === null || _node$classList === void 0 ? void 0 : _node$classList.contains(classname);\n    });\n  };\n  const onButtonClickPng = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toPng(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement('a');\n      link.download = 'bracket.png';\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  const onButtonClickJPEG = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toJpeg(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement('a');\n      link.download = 'bracket.png';\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  const onButtonClickSVG = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toSvg(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement('a');\n      link.download = 'bracket.png';\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(FullScreen, {\n      handle: handleFullScreen,\n      children: [/*#__PURE__*/_jsxDEV(TransformWrapper, {\n        performance: true,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tools\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                border: 'none'\n              },\n              \"data-tooltip\": \"Download bracket\",\n              onClick: () => setModalShow(true),\n              children: /*#__PURE__*/_jsxDEV(DownloadBracketIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransformComponent, {\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: classes.myModalHeader,\n          closeButton: true,\n          children: \"Download Bracket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: classes.myModalBody,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: [/*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickPng,\n              children: \"Png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickJPEG,\n              children: \"Jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickSVG,\n              children: \"SVG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_s(BracketWrapper, \"ooldrQl662DIoj76IunPx8yttis=\", false, function () {\n  return [useFullScreenHandle];\n});\n_c = BracketWrapper;\nexport default BracketWrapper;\nvar _c;\n$RefreshReg$(_c, \"BracketWrapper\");","map":{"version":3,"names":["React","useState","useCallback","useRef","MyModal","MyButton","Modal","TransformWrapper","TransformComponent","toPng","toJpeg","toSvg","FullScreen","useFullScreenHandle","classes","DownloadBracketIcon","BracketWrapper","children","ref","handleFullScreen","modalShow","setModalShow","filter","node","exclusionClasses","some","classname","classList","contains","onButtonClickPng","current","cacheBust","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","log","onButtonClickJPEG","onButtonClickSVG","border","myModalHeader","myModalBody","myBracketDownloadBtn"],"sources":["/home/indiora/ATS/frontend/src/components/UI/BracketWrapper/BracketWrapper.jsx"],"sourcesContent":["import React,   { useState, useCallback, useRef } from \"react\";\nimport MyModal from \"../MyModal/MyModal\";\nimport MyButton from \"../MyButton/MyButton\";\nimport Modal from 'react-bootstrap/Modal';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\"; \nimport { toPng, toJpeg, toSvg } from 'html-to-image'\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport classes from \"./BracketWrapper.module.css\";\nimport DownloadBracketIcon from \"../../../assets/svg/DownloadBracketIcon\";\n\nconst BracketWrapper = ({children}) => {\n  const ref = useRef(null)\n  const handleFullScreen = useFullScreenHandle();\n  const [modalShow, setModalShow] = useState(false);\n\n\n  const filter = (node) => {\n    const exclusionClasses = ['tools', ''];\n    return !exclusionClasses.some((classname) => node.classList?.contains(classname));\n  }\n\n  const onButtonClickPng = useCallback(() => {\n    if (ref.current === null) {\n      return\n    }\n\n    toPng(ref.current, { filter:filter, cacheBust: true, })\n      .then((dataUrl) => {\n        const link = document.createElement('a')\n        link.download = 'bracket.png'\n        link.href = dataUrl\n        link.click()\n        setModalShow(false)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [ref])\n\n  const onButtonClickJPEG = useCallback(() => {\n    if (ref.current === null) {\n      return\n    }\n\n    toJpeg(ref.current, { filter:filter, cacheBust: true, })\n      .then((dataUrl) => {\n        const link = document.createElement('a')\n        link.download = 'bracket.png'\n        link.href = dataUrl\n        link.click()\n        setModalShow(false)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [ref])\n\n  const onButtonClickSVG = useCallback(() => {\n    if (ref.current === null) {\n      return\n    }\n\n    toSvg(ref.current, { filter:filter, cacheBust: true, })\n      .then((dataUrl) => {\n        const link = document.createElement('a')\n        link.download = 'bracket.png'\n        link.href = dataUrl\n        link.click()\n        setModalShow(false)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [ref])\n\n\n  return (\n    \n      <div ref={ref}>\n        <FullScreen handle={handleFullScreen}>\n        <TransformWrapper performance={true}>\n          <React.Fragment>\n            <div className=\"tools\">\n              <button style={{border: 'none'}} data-tooltip=\"Download bracket\" onClick={() => setModalShow(true)}> \n                <DownloadBracketIcon/>\n              </button>\n              {/* <button onClick={handleFullScreen.enter} style={{border: 'none', background:'inherit'}} className=\"px-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 20 20\"\n                className=\"toolsSvg\"\n              >\n                <path fill=\"none\" d=\"M0 0H20V20H0z\"></path>\n                <path d=\"M7 2H2v5l1.8-1.8L6.5 8 8 6.5 5.2 3.8 7 2zm6 0l1.8 1.8L12 6.5 13.5 8l2.7-2.7L18 7V2h-5zm.5 10L12 13.5l2.7 2.7L13 18h5v-5l-1.8 1.8-2.7-2.8zm-7 0l-2.7 2.7L2 13v5h5l-1.8-1.8L8 13.5 6.5 12z\"></path>\n              </svg>\n              </button> */}\n            </div>\n            <TransformComponent>\n\n            {children}\n\n            </TransformComponent>\n            </React.Fragment>\n        </TransformWrapper>\n        <MyModal \n            show={modalShow}\n            onHide={() => setModalShow(false)}>\n            <Modal.Header className={classes.myModalHeader} closeButton >\n              Download Bracket\n            </Modal.Header>\n            <Modal.Body className={classes.myModalBody}>\n              <div className='d-grid'>\n                <MyButton additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`} onClick={onButtonClickPng}>Png</MyButton>\n                <MyButton additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`} onClick={onButtonClickJPEG}>Jpeg</MyButton>\n                <MyButton additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`} onClick={onButtonClickSVG}>SVG</MyButton>\n              </div>\n            </Modal.Body>\n        </MyModal>\n      </FullScreen>\n    </div>\n    \n)\n};\nexport default BracketWrapper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAMC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC9D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,sBAAsB;AAC3E,SAASC,KAAK,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACpD,SAASC,UAAU,EAAEC,mBAAmB,QAAQ,mBAAmB;AACnE,OAAOC,OAAO,MAAM,6BAA6B;AACjD,OAAOC,mBAAmB,MAAM,yCAAyC;AAAC;AAE1E,MAAMC,cAAc,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAChC,MAAMC,GAAG,GAAGf,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMgB,gBAAgB,GAAGN,mBAAmB,EAAE;EAC9C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAGjD,MAAMqB,MAAM,GAAIC,IAAI,IAAK;IACvB,MAAMC,gBAAgB,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;IACtC,OAAO,CAACA,gBAAgB,CAACC,IAAI,CAAEC,SAAS;MAAA;MAAA,0BAAKH,IAAI,CAACI,SAAS,oDAAd,gBAAgBC,QAAQ,CAACF,SAAS,CAAC;IAAA,EAAC;EACnF,CAAC;EAED,MAAMG,gBAAgB,GAAG3B,WAAW,CAAC,MAAM;IACzC,IAAIgB,GAAG,CAACY,OAAO,KAAK,IAAI,EAAE;MACxB;IACF;IAEArB,KAAK,CAACS,GAAG,CAACY,OAAO,EAAE;MAAER,MAAM,EAACA,MAAM;MAAES,SAAS,EAAE;IAAM,CAAC,CAAC,CACpDC,IAAI,CAAEC,OAAO,IAAK;MACjB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,QAAQ,GAAG,aAAa;MAC7BH,IAAI,CAACI,IAAI,GAAGL,OAAO;MACnBC,IAAI,CAACK,KAAK,EAAE;MACZlB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,MAAM0B,iBAAiB,GAAG1C,WAAW,CAAC,MAAM;IAC1C,IAAIgB,GAAG,CAACY,OAAO,KAAK,IAAI,EAAE;MACxB;IACF;IAEApB,MAAM,CAACQ,GAAG,CAACY,OAAO,EAAE;MAAER,MAAM,EAACA,MAAM;MAAES,SAAS,EAAE;IAAM,CAAC,CAAC,CACrDC,IAAI,CAAEC,OAAO,IAAK;MACjB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,QAAQ,GAAG,aAAa;MAC7BH,IAAI,CAACI,IAAI,GAAGL,OAAO;MACnBC,IAAI,CAACK,KAAK,EAAE;MACZlB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,MAAM2B,gBAAgB,GAAG3C,WAAW,CAAC,MAAM;IACzC,IAAIgB,GAAG,CAACY,OAAO,KAAK,IAAI,EAAE;MACxB;IACF;IAEAnB,KAAK,CAACO,GAAG,CAACY,OAAO,EAAE;MAAER,MAAM,EAACA,MAAM;MAAES,SAAS,EAAE;IAAM,CAAC,CAAC,CACpDC,IAAI,CAAEC,OAAO,IAAK;MACjB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,QAAQ,GAAG,aAAa;MAC7BH,IAAI,CAACI,IAAI,GAAGL,OAAO;MACnBC,IAAI,CAACK,KAAK,EAAE;MACZlB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAGT,oBAEI;IAAK,GAAG,EAAEA,GAAI;IAAA,uBACZ,QAAC,UAAU;MAAC,MAAM,EAAEC,gBAAiB;MAAA,wBACrC,QAAC,gBAAgB;QAAC,WAAW,EAAE,IAAK;QAAA,uBAClC,QAAC,KAAK,CAAC,QAAQ;UAAA,wBACb;YAAK,SAAS,EAAC,OAAO;YAAA,uBACpB;cAAQ,KAAK,EAAE;gBAAC2B,MAAM,EAAE;cAAM,CAAE;cAAC,gBAAa,kBAAkB;cAAC,OAAO,EAAE,MAAMzB,YAAY,CAAC,IAAI,CAAE;cAAA,uBACjG,QAAC,mBAAmB;gBAAA;gBAAA;gBAAA;cAAA;YAAE;cAAA;cAAA;cAAA;YAAA;UACf;YAAA;YAAA;YAAA;UAAA,QAaL,eACN,QAAC,kBAAkB;YAAA,UAElBJ;UAAQ;YAAA;YAAA;YAAA;UAAA,QAEY;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA,QACF,eACnB,QAAC,OAAO;QACJ,IAAI,EAAEG,SAAU;QAChB,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAK,CAAE;QAAA,wBAClC,QAAC,KAAK,CAAC,MAAM;UAAC,SAAS,EAAEP,OAAO,CAACiC,aAAc;UAAC,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE5C,eACf,QAAC,KAAK,CAAC,IAAI;UAAC,SAAS,EAAEjC,OAAO,CAACkC,WAAY;UAAA,uBACzC;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACrB,QAAC,QAAQ;cAAC,YAAY,EAAG,GAAElC,OAAO,CAACmC,oBAAqB,cAAc;cAAC,OAAO,EAAEpB,gBAAiB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe,eAChH,QAAC,QAAQ;cAAC,YAAY,EAAG,GAAEf,OAAO,CAACmC,oBAAqB,cAAc;cAAC,OAAO,EAAEL,iBAAkB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB,eAClH,QAAC,QAAQ;cAAC,YAAY,EAAG,GAAE9B,OAAO,CAACmC,oBAAqB,cAAc;cAAC,OAAO,EAAEJ,gBAAiB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAe;UAAA;YAAA;YAAA;YAAA;UAAA;QAC5G;UAAA;UAAA;UAAA;QAAA,QACK;MAAA;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACT;AAGV,CAAC;AAAC,GAlHI7B,cAAc;EAAA,QAEOH,mBAAmB;AAAA;AAAA,KAFxCG,cAAc;AAmHpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}