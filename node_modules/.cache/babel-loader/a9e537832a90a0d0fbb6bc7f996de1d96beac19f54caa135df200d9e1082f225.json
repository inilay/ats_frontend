{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/UI/BracketWrapper/BracketWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from \"react\";\nimport MyModal from \"../MyModal/MyModal\";\nimport MyButton from \"../MyButton/MyButton\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { toPng, toJpeg, toSvg } from \"html-to-image\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport classes from \"./BracketWrapper.module.css\";\nimport DownloadBracketIcon from \"../../../assets/svg/DownloadBracketIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BracketWrapper = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const ref = useRef(null);\n  const handleFullScreen = useFullScreenHandle();\n  const [modalShow, setModalShow] = useState(false);\n  const filter = node => {\n    const exclusionClasses = [\"tools\", \"\"];\n    return !exclusionClasses.some(classname => {\n      var _node$classList;\n      return (_node$classList = node.classList) === null || _node$classList === void 0 ? void 0 : _node$classList.contains(classname);\n    });\n  };\n  const onButtonClickPng = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toPng(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement(\"a\");\n      link.download = \"bracket.png\";\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  const onButtonClickJPEG = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toJpeg(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement(\"a\");\n      link.download = \"bracket.png\";\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  const onButtonClickSVG = useCallback(() => {\n    if (ref.current === null) {\n      return;\n    }\n    toSvg(ref.current, {\n      filter: filter,\n      cacheBust: true\n    }).then(dataUrl => {\n      const link = document.createElement(\"a\");\n      link.download = \"bracket.png\";\n      link.href = dataUrl;\n      link.click();\n      setModalShow(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [ref]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(FullScreen, {\n      handle: handleFullScreen,\n      children: [/*#__PURE__*/_jsxDEV(TransformWrapper, {\n        performance: true,\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tools\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                border: \"none\"\n              },\n              \"data-tooltip\": \"Download bracket\",\n              onClick: () => setModalShow(true),\n              children: /*#__PURE__*/_jsxDEV(DownloadBracketIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TransformComponent, {\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n        show: modalShow,\n        onHide: () => setModalShow(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          className: classes.myModalHeader,\n          closeButton: true,\n          children: \"Download Bracket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: classes.myModalBody,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: [/*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickPng,\n              children: \"Png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickJPEG,\n              children: \"Jpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n              additionalCl: `${classes.myBracketDownloadBtn} btn-md mb-3`,\n              onClick: onButtonClickSVG,\n              children: \"SVG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(BracketWrapper, \"ooldrQl662DIoj76IunPx8yttis=\", false, function () {\n  return [useFullScreenHandle];\n});\n_c = BracketWrapper;\nexport default BracketWrapper;\nvar _c;\n$RefreshReg$(_c, \"BracketWrapper\");","map":{"version":3,"names":["React","useState","useCallback","useRef","MyModal","MyButton","Modal","TransformWrapper","TransformComponent","toPng","toJpeg","toSvg","FullScreen","useFullScreenHandle","classes","DownloadBracketIcon","BracketWrapper","children","ref","handleFullScreen","modalShow","setModalShow","filter","node","exclusionClasses","some","classname","classList","contains","onButtonClickPng","current","cacheBust","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","log","onButtonClickJPEG","onButtonClickSVG","border","myModalHeader","myModalBody","myBracketDownloadBtn"],"sources":["/home/indiora/ATS/frontend/src/components/UI/BracketWrapper/BracketWrapper.jsx"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\nimport MyModal from \"../MyModal/MyModal\";\nimport MyButton from \"../MyButton/MyButton\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { toPng, toJpeg, toSvg } from \"html-to-image\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport classes from \"./BracketWrapper.module.css\";\nimport DownloadBracketIcon from \"../../../assets/svg/DownloadBracketIcon\";\n\nconst BracketWrapper = ({ children }) => {\n    const ref = useRef(null);\n    const handleFullScreen = useFullScreenHandle();\n    const [modalShow, setModalShow] = useState(false);\n\n    const filter = (node) => {\n        const exclusionClasses = [\"tools\", \"\"];\n        return !exclusionClasses.some((classname) => node.classList?.contains(classname));\n    };\n\n    const onButtonClickPng = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        toPng(ref.current, { filter: filter, cacheBust: true })\n            .then((dataUrl) => {\n                const link = document.createElement(\"a\");\n                link.download = \"bracket.png\";\n                link.href = dataUrl;\n                link.click();\n                setModalShow(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [ref]);\n\n    const onButtonClickJPEG = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        toJpeg(ref.current, { filter: filter, cacheBust: true })\n            .then((dataUrl) => {\n                const link = document.createElement(\"a\");\n                link.download = \"bracket.png\";\n                link.href = dataUrl;\n                link.click();\n                setModalShow(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [ref]);\n\n    const onButtonClickSVG = useCallback(() => {\n        if (ref.current === null) {\n            return;\n        }\n\n        toSvg(ref.current, { filter: filter, cacheBust: true })\n            .then((dataUrl) => {\n                const link = document.createElement(\"a\");\n                link.download = \"bracket.png\";\n                link.href = dataUrl;\n                link.click();\n                setModalShow(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [ref]);\n\n    return (\n        <div ref={ref}>\n            <FullScreen handle={handleFullScreen}>\n                <TransformWrapper performance={true}>\n                    <React.Fragment>\n                        <div className=\"tools\">\n                            <button\n                                style={{ border: \"none\" }}\n                                data-tooltip=\"Download bracket\"\n                                onClick={() => setModalShow(true)}\n                            >\n                                <DownloadBracketIcon />\n                            </button>\n                            {/* <button onClick={handleFullScreen.enter} style={{border: 'none', background:'inherit'}} className=\"px-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 20 20\"\n                className=\"toolsSvg\"\n              >\n                <path fill=\"none\" d=\"M0 0H20V20H0z\"></path>\n                <path d=\"M7 2H2v5l1.8-1.8L6.5 8 8 6.5 5.2 3.8 7 2zm6 0l1.8 1.8L12 6.5 13.5 8l2.7-2.7L18 7V2h-5zm.5 10L12 13.5l2.7 2.7L13 18h5v-5l-1.8 1.8-2.7-2.8zm-7 0l-2.7 2.7L2 13v5h5l-1.8-1.8L8 13.5 6.5 12z\"></path>\n              </svg>\n              </button> */}\n                        </div>\n                        <TransformComponent>{children}</TransformComponent>\n                    </React.Fragment>\n                </TransformWrapper>\n                <MyModal show={modalShow} onHide={() => setModalShow(false)}>\n                    <Modal.Header className={classes.myModalHeader} closeButton>\n                        Download Bracket\n                    </Modal.Header>\n                    <Modal.Body className={classes.myModalBody}>\n                        <div className=\"d-grid\">\n                            <MyButton\n                                additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`}\n                                onClick={onButtonClickPng}\n                            >\n                                Png\n                            </MyButton>\n                            <MyButton\n                                additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`}\n                                onClick={onButtonClickJPEG}\n                            >\n                                Jpeg\n                            </MyButton>\n                            <MyButton\n                                additionalCl={`${classes.myBracketDownloadBtn} btn-md mb-3`}\n                                onClick={onButtonClickSVG}\n                            >\n                                SVG\n                            </MyButton>\n                        </div>\n                    </Modal.Body>\n                </MyModal>\n            </FullScreen>\n        </div>\n    );\n};\nexport default BracketWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}