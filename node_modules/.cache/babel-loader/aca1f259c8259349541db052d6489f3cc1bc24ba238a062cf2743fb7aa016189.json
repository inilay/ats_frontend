{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst bracketSlice = createSlice({\n  name: 'bracket',\n  initialState: {\n    brackets: [],\n    anonymous: false,\n    currentMatch: null,\n    currentBracketId: null\n  },\n  reducers: {\n    setBracket(state, action) {\n      state.brackets = action.payload.brackets;\n    },\n    setAnonymous(state, action) {\n      state.brackets = action.payload.brackets;\n    },\n    changeBracket(state, action) {\n      state.brackets = state.brackets.map(bracket => bracket.id === action.payload.bracket.id ? {\n        ...bracket,\n        rounds: action.payload.bracket.rounds\n      } : bracket);\n    },\n    setCurrentMatch(state, action) {\n      state.currentMatch = action.payload.currentMatch;\n    },\n    changeCurrentMatchInfo(state, action) {\n      let _info = state.currentMatch.info;\n      _info.find(item => {\n        if (item.id === action.payload.id) {\n          item.participant_score = action.payload.participant_score;\n          return true;\n        }\n      });\n      state.currentMatch.info = _info;\n    },\n    setCurrentBracketId(state, action) {\n      state.currentBracketId = action.payload.currentBracketId;\n    },\n    clearBracket(state) {\n      state.brackets = [];\n      state.currentBracketId = null;\n      state.currentMatch = null;\n      state.anonymous = false;\n    }\n  }\n});\nexport const {\n  setBracket,\n  clearBracket,\n  setCurrentMatch,\n  setCurrentBracketId,\n  changeCurrentMatchInfo,\n  changeBracket\n} = bracketSlice.actions;\nexport default bracketSlice.reducer;","map":{"version":3,"names":["createSlice","bracketSlice","name","initialState","brackets","anonymous","currentMatch","currentBracketId","reducers","setBracket","state","action","payload","setAnonymous","changeBracket","map","bracket","id","rounds","setCurrentMatch","changeCurrentMatchInfo","_info","info","find","item","participant_score","setCurrentBracketId","clearBracket","actions","reducer"],"sources":["/home/indiora/ATS/frontend/src/store/bracket.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst bracketSlice = createSlice({\n    name: 'bracket',\n    initialState: {\n        brackets: [],\n        anonymous: false,\n        currentMatch: null,\n        currentBracketId: null\n    },\n    reducers: {\n        setBracket(state, action) {\n            state.brackets = action.payload.brackets\n        },\n        setAnonymous(state, action) {\n            state.brackets = action.payload.brackets\n        },\n        changeBracket(state, action) {\n            state.brackets = state.brackets.map((bracket) => (\n                bracket.id === action.payload.bracket.id\n                  ? { ...bracket, rounds: action.payload.bracket.rounds }\n                  : bracket\n              ));       \n        },\n        setCurrentMatch(state, action) {\n            state.currentMatch = action.payload.currentMatch\n        },\n        changeCurrentMatchInfo(state, action) {\n            let _info = state.currentMatch.info\n            _info.find(item => {\n                if (item.id === action.payload.id) {\n                    item.participant_score = action.payload.participant_score;\n                    return true;\n                }\n            });\n            state.currentMatch.info = _info\n        },\n        setCurrentBracketId(state, action) {\n            state.currentBracketId = action.payload.currentBracketId\n        },\n        clearBracket(state) {\n            state.brackets = []\n            state.currentBracketId = null\n            state.currentMatch = null\n            state.anonymous = false\n        },\n    }\n})\n\nexport const { setBracket, clearBracket, setCurrentMatch, setCurrentBracketId, changeCurrentMatchInfo, changeBracket } = bracketSlice.actions;\n\nexport default bracketSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAE;EACtB,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;IAC5C,CAAC;IACDS,YAAY,CAACH,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;IAC5C,CAAC;IACDU,aAAa,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzBD,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACW,GAAG,CAAEC,OAAO,IACxCA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACI,OAAO,CAACC,EAAE,GACpC;QAAE,GAAGD,OAAO;QAAEE,MAAM,EAAEP,MAAM,CAACC,OAAO,CAACI,OAAO,CAACE;MAAO,CAAC,GACrDF,OACL,CAAC;IACR,CAAC;IACDG,eAAe,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACC,OAAO,CAACN,YAAY;IACpD,CAAC;IACDc,sBAAsB,CAACV,KAAK,EAAEC,MAAM,EAAE;MAClC,IAAIU,KAAK,GAAGX,KAAK,CAACJ,YAAY,CAACgB,IAAI;MACnCD,KAAK,CAACE,IAAI,CAACC,IAAI,IAAI;QACf,IAAIA,IAAI,CAACP,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACK,EAAE,EAAE;UAC/BO,IAAI,CAACC,iBAAiB,GAAGd,MAAM,CAACC,OAAO,CAACa,iBAAiB;UACzD,OAAO,IAAI;QACf;MACJ,CAAC,CAAC;MACFf,KAAK,CAACJ,YAAY,CAACgB,IAAI,GAAGD,KAAK;IACnC,CAAC;IACDK,mBAAmB,CAAChB,KAAK,EAAEC,MAAM,EAAE;MAC/BD,KAAK,CAACH,gBAAgB,GAAGI,MAAM,CAACC,OAAO,CAACL,gBAAgB;IAC5D,CAAC;IACDoB,YAAY,CAACjB,KAAK,EAAE;MAChBA,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACH,gBAAgB,GAAG,IAAI;MAC7BG,KAAK,CAACJ,YAAY,GAAG,IAAI;MACzBI,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,UAAU;EAAEkB,YAAY;EAAER,eAAe;EAAEO,mBAAmB;EAAEN,sBAAsB;EAAEN;AAAc,CAAC,GAAGb,YAAY,CAAC2B,OAAO;AAE7I,eAAe3B,YAAY,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}