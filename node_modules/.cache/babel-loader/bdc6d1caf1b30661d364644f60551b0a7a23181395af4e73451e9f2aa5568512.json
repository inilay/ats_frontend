{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/UI/MyFormGroupInput/MyFormGroupInput.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport classes from \"./MyFormGroupInput.module.css\";\nimport { useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFormGroupInput = _ref => {\n  _s();\n  var _errors$name;\n  let {\n    label,\n    defaultValue,\n    name,\n    trigger,\n    control,\n    as,\n    type,\n    onChange,\n    register = () => {},\n    validationSchema,\n    errors,\n    className\n  } = _ref;\n  const inputChangeHandler = event => {\n    onChange(event.target);\n  };\n  const {\n    field,\n    fieldState\n  } = useController({\n    control,\n    name: name\n  });\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      className: `${classes.myFormLabel}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      ...register(name, validationSchema),\n      type: type,\n      as: as,\n      onChange: inputChangeHandler,\n      defaultValue: defaultValue,\n      className: `${classes.myInput} ${className} shadow-none`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), errors && errors[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.warningP,\n      role: \"alert\",\n      children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(MyFormGroupInput, \"fkarB6GjURVC9jcR1GaPC0v2gyk=\", false, function () {\n  return [useController];\n});\n_c = MyFormGroupInput;\nexport default MyFormGroupInput;\nvar _c;\n$RefreshReg$(_c, \"MyFormGroupInput\");","map":{"version":3,"names":["React","Form","classes","useController","MyFormGroupInput","label","defaultValue","name","trigger","control","as","type","onChange","register","validationSchema","errors","className","inputChangeHandler","event","target","field","fieldState","myFormLabel","myInput","warningP","message"],"sources":["/home/indiora/ATS/frontend/src/components/UI/MyFormGroupInput/MyFormGroupInput.jsx"],"sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport classes from \"./MyFormGroupInput.module.css\";\nimport { useController } from \"react-hook-form\";\n\nconst MyFormGroupInput = ({ label, defaultValue, name, trigger, control, as, type, onChange, register = () => {}, validationSchema, errors, className}) => {\n\n    const inputChangeHandler = (event) => {\n        onChange(event.target)\n    }\n\n    const { field, fieldState } = useController({ control, name: name });\n\n    return (\n        <Form.Group className=\"mb-3\">\n            <Form.Label className={`${classes.myFormLabel}`}>{label}</Form.Label>\n            <Form.Control\n                {...register(name, validationSchema)}\n                type={type}\n                as={as}\n                onChange={inputChangeHandler}\n                defaultValue={defaultValue}\n                className={`${classes.myInput} ${className} shadow-none`}\n            />\n        {errors && errors[name] && <p className={classes.warningP} role=\"alert\">{errors[name]?.message}</p>}\n        </Form.Group>\n    );\n};\n\nexport default MyFormGroupInput;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,aAAa,QAAQ,iBAAiB;AAAC;AAEhD,MAAMC,gBAAgB,GAAG,QAAkI;EAAA;EAAA;EAAA,IAAjI;IAAEC,KAAK;IAAEC,YAAY;IAAEC,IAAI;IAAEC,OAAO;IAAEC,OAAO;IAAEC,EAAE;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,QAAQ,GAAG,MAAM,CAAC,CAAC;IAAEC,gBAAgB;IAAEC,MAAM;IAAEC;EAAS,CAAC;EAElJ,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClCN,QAAQ,CAACM,KAAK,CAACC,MAAM,CAAC;EAC1B,CAAC;EAED,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGlB,aAAa,CAAC;IAAEM,OAAO;IAAEF,IAAI,EAAEA;EAAK,CAAC,CAAC;EAEpE,oBACI,QAAC,IAAI,CAAC,KAAK;IAAC,SAAS,EAAC,MAAM;IAAA,wBACxB,QAAC,IAAI,CAAC,KAAK;MAAC,SAAS,EAAG,GAAEL,OAAO,CAACoB,WAAY,EAAE;MAAA,UAAEjB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAc,eACrE,QAAC,IAAI,CAAC,OAAO;MAAA,GACLQ,QAAQ,CAACN,IAAI,EAAEO,gBAAgB,CAAC;MACpC,IAAI,EAAEH,IAAK;MACX,EAAE,EAAED,EAAG;MACP,QAAQ,EAAEO,kBAAmB;MAC7B,YAAY,EAAEX,YAAa;MAC3B,SAAS,EAAG,GAAEJ,OAAO,CAACqB,OAAQ,IAAGP,SAAU;IAAc;MAAA;MAAA;MAAA;IAAA,QAC3D,EACLD,MAAM,IAAIA,MAAM,CAACR,IAAI,CAAC,iBAAI;MAAG,SAAS,EAAEL,OAAO,CAACsB,QAAS;MAAC,IAAI,EAAC,OAAO;MAAA,0BAAET,MAAM,CAACR,IAAI,CAAC,iDAAZ,aAAckB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACtF;AAErB,CAAC;AAAC,GAtBIrB,gBAAgB;EAAA,QAMYD,aAAa;AAAA;AAAA,KANzCC,gBAAgB;AAwBtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}