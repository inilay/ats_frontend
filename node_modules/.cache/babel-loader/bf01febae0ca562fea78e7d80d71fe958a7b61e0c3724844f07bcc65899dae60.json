{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/CreateTournament/TournamentInfoInput/TournamentInfoInput.jsx\";\nimport React, { useState, useContext, Fragment } from \"react\";\nimport \"../../styles/App.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context\";\nimport useAxios from \"../../API/useAxios\";\nimport UploadButton from \"../../components/UI/UploadButton/UploadButton\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../../components/UI/MyCard/MyCard\";\nimport classes from \"./TournamentInfoInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TournamentInfoInput = _ref => {\n  let {\n    errors,\n    register,\n    inputChangeHandler,\n    setInputFile,\n    inputRadioChangeHandler,\n    tournamentType\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(MyCard, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"card-header-text\",\n      children: \"Basic Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n        label: \"Title\",\n        name: \"title\",\n        type: \"text\",\n        errors: errors,\n        register: register,\n        validationSchema: {\n          required: \"⚠ This input is required.\"\n        },\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n        label: \"Description\",\n        name: \"content\",\n        as: \"textarea\",\n        errors: errors,\n        register: register,\n        validationSchema: {},\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n        label: \"Prize fund\",\n        name: \"prize\",\n        errors: errors,\n        register: register,\n        validationSchema: {\n          pattern: {\n            value: /^[+-]?\\d+(\\.\\d+)?$/,\n            message: \"⚠ Invalid data.\"\n          }\n        },\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n        label: \"Game\",\n        name: \"game\",\n        errors: errors,\n        register: register,\n        validationSchema: {\n          required: \"⚠ This input is required.\"\n        },\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n        label: \"Start of the tournament\",\n        name: \"start_time\",\n        type: \"datetime-local\",\n        errors: errors,\n        register: register,\n        validationSchema: {\n          required: \"⚠ This input is required.\"\n        },\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n          setInputFileValue: setInputFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tournament type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"One stage\",\n          name: \"tournament_type\",\n          type: \"radio\",\n          value: \"0\",\n          checked: tournamentType === \"0\" ? true : false,\n          onChange: event => {\n            inputRadioChangeHandler(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          label: \"Group two stage\",\n          name: \"tournament_type\",\n          type: \"radio\",\n          value: \"1\",\n          checked: tournamentType === \"1\" ? true : false,\n          onChange: event => {\n            inputRadioChangeHandler(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TournamentInfoInput;\nexport default TournamentInfoInput;\nvar _c;\n$RefreshReg$(_c, \"TournamentInfoInput\");","map":{"version":3,"names":["React","useState","useContext","Fragment","Form","Card","useNavigate","AuthContext","useAxios","UploadButton","useForm","MyFormGroupInput","MyButton","MyCard","classes","TournamentInfoInput","errors","register","inputChangeHandler","setInputFile","inputRadioChangeHandler","tournamentType","required","pattern","value","message","event"],"sources":["/home/indiora/ATS/frontend/src/pages/CreateTournament/TournamentInfoInput/TournamentInfoInput.jsx"],"sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\nimport \"../../styles/App.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../context\";\nimport useAxios from \"../../API/useAxios\";\nimport UploadButton from \"../../components/UI/UploadButton/UploadButton\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../../components/UI/MyCard/MyCard\";\nimport classes from \"./TournamentInfoInput.module.css\";\n\n\nconst TournamentInfoInput = ({errors, register, inputChangeHandler, setInputFile, inputRadioChangeHandler, tournamentType}) => {\n\n\n  return (\n    <MyCard>\n    <Card.Header className=\"card-header-text\">Basic Info</Card.Header>\n    <Card.Body>\n      <MyFormGroupInput\n        label=\"Title\"\n        name=\"title\"\n        type=\"text\"\n        errors={errors}\n        register={register}\n        validationSchema={{\n          required: \"⚠ This input is required.\",\n        }}\n        onChange={inputChangeHandler}\n      ></MyFormGroupInput>\n      <MyFormGroupInput\n        label=\"Description\"\n        name=\"content\"\n        as=\"textarea\"\n        errors={errors}\n        register={register}\n        validationSchema={{\n         \n        }}\n        onChange={inputChangeHandler}\n      ></MyFormGroupInput>\n      <MyFormGroupInput\n        label=\"Prize fund\"\n        name=\"prize\"\n        errors={errors}\n        register={register}\n        validationSchema={{\n          pattern: {\n            value: /^[+-]?\\d+(\\.\\d+)?$/,\n            message: \"⚠ Invalid data.\",\n          },\n        }}\n        onChange={inputChangeHandler}\n      ></MyFormGroupInput>\n      <MyFormGroupInput\n        label=\"Game\"\n        name=\"game\"\n        errors={errors}\n        register={register}\n        validationSchema={{\n          required: \"⚠ This input is required.\",\n        }}\n        onChange={inputChangeHandler}\n      ></MyFormGroupInput>\n      <MyFormGroupInput\n        label=\"Start of the tournament\"\n        name=\"start_time\"\n        type=\"datetime-local\"\n        errors={errors}\n        register={register}\n        validationSchema={{\n          required: \"⚠ This input is required.\",\n        }}\n        onChange={inputChangeHandler}\n      ></MyFormGroupInput>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Poster</Form.Label>\n        <UploadButton setInputFileValue={setInputFile} />\n      </Form.Group>\n      <p>Tournament type</p>\n      <div className=\"mb-3\">\n        <Form.Check\n          inline\n          label=\"One stage\"\n          name=\"tournament_type\"\n          type=\"radio\"\n          value=\"0\"\n          checked={tournamentType === \"0\" ? true : false}\n          onChange={(event) => {\n            inputRadioChangeHandler(event);\n          }}\n        ></Form.Check>\n        <Form.Check\n          inline\n          label=\"Group two stage\"\n          name=\"tournament_type\"\n          type=\"radio\"\n          value=\"1\"\n          checked={tournamentType === \"1\" ? true : false}\n          onChange={(event) => {\n            inputRadioChangeHandler(event);\n          }}\n        ></Form.Check>\n      </div>\n    </Card.Body>\n  </MyCard>\n  );\n};\n\nexport default TournamentInfoInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}