{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/Bracket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport PostService from \"../API/PostService\";\nimport RoundRobin from \"../components/RoundRobin\";\nimport SingleEl from \"../components/SingleEl\";\nimport DoubleEl from \"../components/DoubleEl\";\nimport Swiss from \"../components/Swiss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bracket = () => {\n  _s();\n  const params = useParams();\n  const [bracket, setBracket] = useState([]);\n  const [type, setTypes] = useState(\"\");\n  const [fetchBrackets, isBraLoadind, braError] = useFetching(async id => {\n    const response = await PostService.getBracketById(id);\n    setBracket(response.data.bracket);\n    setTypes(response.data.type);\n    console.log(response.data);\n  });\n  useEffect(() => {\n    fetchBrackets(params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: isBraLoadind ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        width: \"80%\",\n        height: \"100%\"\n      },\n      children: (() => {\n        if (type === \"SE\") {\n          return /*#__PURE__*/_jsxDEV(SingleEl, {\n            id: params.id,\n            bracket: bracket,\n            owner: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }, this);\n        } else if (type === \"RR\") {\n          return /*#__PURE__*/_jsxDEV(RoundRobin, {\n            id: params.id,\n            bracket: bracket,\n            owner: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, this);\n        } else if (type === \"DE\") {\n          return /*#__PURE__*/_jsxDEV(DoubleEl, {\n            id: params.id,\n            bracket: bracket,\n            owner: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }, this);\n        } else if (type === \"SW\") {\n          return /*#__PURE__*/_jsxDEV(Swiss, {\n            id: params.id,\n            bracket: bracket,\n            owner: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Bracket, \"rbokSxohEMhOf2X7TG2usIIcBxM=\", false, function () {\n  return [useParams, useFetching];\n});\n_c = Bracket;\nexport default Bracket;\nvar _c;\n$RefreshReg$(_c, \"Bracket\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useFetching","Loader","PostService","RoundRobin","SingleEl","DoubleEl","Swiss","Bracket","params","bracket","setBracket","type","setTypes","fetchBrackets","isBraLoadind","braError","id","response","getBracketById","data","console","log","width","height"],"sources":["/home/indiora/ATS/frontend/src/pages/Bracket.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport PostService from \"../API/PostService\";\nimport RoundRobin from \"../components/RoundRobin\";\nimport SingleEl from \"../components/SingleEl\";\nimport DoubleEl from \"../components/DoubleEl\";\nimport Swiss from \"../components/Swiss\";\n\nconst Bracket = () => {\n  const params = useParams();\n  const [bracket, setBracket] = useState([]);\n  const [type, setTypes] = useState(\"\");\n  const [fetchBrackets, isBraLoadind, braError] = useFetching(async (id) => {\n    const response = await PostService.getBracketById(id);\n    setBracket(response.data.bracket);\n    setTypes(response.data.type);\n    console.log(response.data);\n  });\n\n  useEffect(() => {\n    fetchBrackets(params.id);\n  }, []);\n\n  return (\n    <section>\n      {isBraLoadind ? (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      ) : (\n        <div className=\"container\" style={{ width: \"80%\", height: \"100%\" }}>\n          {(() => {\n            if (type === \"SE\") {\n              return <SingleEl id={params.id} bracket={bracket} owner={\"\"} />;\n            } else if (type === \"RR\") {\n              return <RoundRobin id={params.id} bracket={bracket} owner={\"\"} />;\n            } else if (type === \"DE\") {\n              return <DoubleEl id={params.id} bracket={bracket} owner={\"\"} />;\n            } else if (type === \"SW\") {\n              return <Swiss id={params.id} bracket={bracket} owner={\"\"} />;\n            }\n          })()}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default Bracket;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAMC,MAAM,GAAGT,SAAS,EAAE;EAC1B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,IAAI,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACe,aAAa,EAAEC,YAAY,EAAEC,QAAQ,CAAC,GAAGf,WAAW,CAAC,MAAOgB,EAAE,IAAK;IACxE,MAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,cAAc,CAACF,EAAE,CAAC;IACrDN,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;IACjCG,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAACR,IAAI,CAAC;IAC5BS,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;EAC5B,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACdgB,aAAa,CAACL,MAAM,CAACQ,EAAE,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,UACGF,YAAY,gBACX;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN,gBAEN;MAAK,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAAEQ,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAA,UAChE,CAAC,MAAM;QACN,IAAIZ,IAAI,KAAK,IAAI,EAAE;UACjB,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAEH,MAAM,CAACQ,EAAG;YAAC,OAAO,EAAEP,OAAQ;YAAC,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QACjE,CAAC,MAAM,IAAIE,IAAI,KAAK,IAAI,EAAE;UACxB,oBAAO,QAAC,UAAU;YAAC,EAAE,EAAEH,MAAM,CAACQ,EAAG;YAAC,OAAO,EAAEP,OAAQ;YAAC,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QACnE,CAAC,MAAM,IAAIE,IAAI,KAAK,IAAI,EAAE;UACxB,oBAAO,QAAC,QAAQ;YAAC,EAAE,EAAEH,MAAM,CAACQ,EAAG;YAAC,OAAO,EAAEP,OAAQ;YAAC,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QACjE,CAAC,MAAM,IAAIE,IAAI,KAAK,IAAI,EAAE;UACxB,oBAAO,QAAC,KAAK;YAAC,EAAE,EAAEH,MAAM,CAACQ,EAAG;YAAC,OAAO,EAAEP,OAAQ;YAAC,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAC9D;MACF,CAAC;IAAG;MAAA;MAAA;MAAA;IAAA;EAEP;IAAA;IAAA;IAAA;EAAA,QACO;AAEd,CAAC;AAAC,GAtCIF,OAAO;EAAA,QACIR,SAAS,EAGwBC,WAAW;AAAA;AAAA,KAJvDO,OAAO;AAwCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}