{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/pages/CreateBracket/CreateBracket.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport classes from \"./CreateBracket.module.css\";\nimport bracketApi from \"../../services/api/bracketApi\";\nimport useAxios from \"../../API/useAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateBracket = () => {\n  _s();\n  const navigate = useNavigate();\n  const api = useAxios();\n  const [participants, setParticipants] = useState(\"\");\n  const [responseBody, setResponseBody] = useState({\n    participants: \"\",\n    type: \"SE\",\n    points_loss: \"0\",\n    points_draw: \"0\",\n    points_victory: \"1\",\n    secod_final: false\n  });\n  const SeParticipantOptions = ['2', '3', '4', '5', '6'];\n  const SWParticipantOptions = ['2', '3', '4', '5', '6'];\n  const DeParticipantOptions = ['2', '4', '6'];\n  const SeAdvanceOptions = {\n    2: ['1'],\n    3: ['1'],\n    4: ['1', '2'],\n    5: ['1'],\n    6: ['1', '2', '3']\n  };\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n    setValue(name, value);\n  };\n  const inputSelectChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n  };\n  const inputCheckBoxChangeHandler = e => {\n    const {\n      target\n    } = e;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const {\n      name\n    } = target;\n    setResponseBody({\n      ...responseBody,\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  const onSubmitHandler = () => {\n    const response = bracketApi.createBracket(api, responseBody).then(function (response) {\n      if (response.status == 201) {\n        navigate(`/bracket/${response.data.id}`);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.create_bracket_form}`,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmitHandler),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(MyCard, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"card-header-text\",\n              children: \"Bracket Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: `${classes.myFormLabel}`,\n                  children: \"Bracket type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  className: \"shadow-none select-input\",\n                  name: \"bracket_type\",\n                  onChange: e => inputSelectChangeHandler(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"Single Elimination\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"2\",\n                    children: \"Double Elimination\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"3\",\n                    children: \"Round Robin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"4\",\n                    children: \"Swiss\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"accordion mb-3\",\n                id: \"accordionExtend\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"accordion-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    class: \"accordion-header\",\n                    children: /*#__PURE__*/_jsxDEV(MyButton, {\n                      additionalCl: classes.editional_settings_btn,\n                      type: \"button\",\n                      \"data-bs-toggle\": \"collapse\",\n                      \"data-bs-target\": \"#collapseOne\",\n                      \"aria-expanded\": \"true\",\n                      \"aria-controls\": \"collapseOne\",\n                      children: \"Additional settings\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"collapseOne\",\n                    class: \"accordion-collapse collapse\",\n                    \"data-bs-parent\": \"#accordionExtend\",\n                    children: responseBody.bracket_type == 1 || responseBody.bracket_type == 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          className: `${classes.myFormLabel}`,\n                          children: \"Participant in match\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          className: \"shadow-none select-input\",\n                          name: \"participant_in_match\",\n                          onChange: e => inputSelectChangeHandler(e),\n                          children: [responseBody.bracket_type == 1 && SeParticipantOptions.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: value,\n                            children: value\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 115,\n                            columnNumber: 35\n                          }, this)), responseBody.bracket_type == 2 && DeParticipantOptions.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: value,\n                            children: value\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 118,\n                            columnNumber: 35\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 109,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col\",\n                        children: responseBody.bracket_type == 1 && /*#__PURE__*/_jsxDEV(Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            className: `${classes.myFormLabel}`,\n                            children: \"Advances to next match\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 125,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            className: \"shadow-none select-input\",\n                            name: \"advances_to_next\",\n                            onChange: e => inputSelectChangeHandler(e),\n                            children: responseBody.bracket_type == 1 && SeAdvanceOptions[responseBody === null || responseBody === void 0 ? void 0 : responseBody.participant_in_match].map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: value,\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 132,\n                              columnNumber: 37\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 126,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, this) :\n                    /*#__PURE__*/\n                    // For SW and RR brackets\n                    _jsxDEV(Fragment, {\n                      children: [responseBody.bracket_type == 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col\",\n                          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                            className: `${classes.myFormLabel}`,\n                            children: \"Participant in match\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 146,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                            className: \"shadow-none select-input\",\n                            name: \"participant_in_match\",\n                            onChange: e => inputSelectChangeHandler(e),\n                            children: SWParticipantOptions.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: value,\n                              children: value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 153,\n                              columnNumber: 39\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 147,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col\",\n                          children: /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                            label: \"Number of rounds, blank will be calculated automatically\",\n                            name: \"number_of_rounds\",\n                            defaultValue: null,\n                            errors: errors,\n                            register: register,\n                            onChange: inputChangeHandler\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 158,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 157,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"row\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col\",\n                          children: /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                            label: \"Points for victory\",\n                            name: \"points_victory\",\n                            errors: errors,\n                            defaultValue: 1,\n                            register: register,\n                            validationSchema: {\n                              required: \"⚠ This input is required.\"\n                            },\n                            onChange: inputChangeHandler\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 171,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col\",\n                          children: /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                            label: \"Points for draw\",\n                            name: \"points_draw\",\n                            errors: errors,\n                            defaultValue: 0,\n                            register: register,\n                            validationSchema: {\n                              required: \"⚠ This input is required.\"\n                            },\n                            onChange: inputChangeHandler\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 184,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"col\",\n                          children: /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                            label: \"Points for loss\",\n                            name: \"points_loss\",\n                            defaultValue: 0,\n                            errors: errors,\n                            register: register,\n                            validationSchema: {\n                              required: \"⚠ This input is required.\"\n                            },\n                            onChange: inputChangeHandler\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 197,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n                label: \"Participants\",\n                name: \"participants\",\n                defaultValue: participants,\n                as: \"textarea\",\n                errors: errors,\n                register: register,\n                validationSchema: {\n                  validate: {\n                    checkAvailability: () => {\n                      return countNonEmptyRows();\n                    }\n                  }\n                },\n                onChange: e => {\n                  participantsHandler(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(MyButton, {\n            additionalCl: \"btn-md\",\n            type: \"submit\",\n            children: \"Create Bracket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBracket, \"bkW+G18Scp7ThoR6y1ntdX0RTCo=\", false, function () {\n  return [useNavigate, useAxios, useForm];\n});\n_c = CreateBracket;\nexport default CreateBracket;\nvar _c;\n$RefreshReg$(_c, \"CreateBracket\");","map":{"version":3,"names":["React","useState","Fragment","useNavigate","Form","Card","useForm","MyFormGroupInput","MyButton","MyCard","classes","bracketApi","useAxios","CreateBracket","navigate","api","participants","setParticipants","responseBody","setResponseBody","type","points_loss","points_draw","points_victory","secod_final","SeParticipantOptions","SWParticipantOptions","DeParticipantOptions","SeAdvanceOptions","inputChangeHandler","inputValue","name","value","setValue","inputSelectChangeHandler","event","target","inputCheckBoxChangeHandler","e","checked","register","handleSubmit","formState","errors","mode","onSubmitHandler","response","createBracket","then","status","data","id","create_bracket_form","myFormLabel","editional_settings_btn","bracket_type","map","participant_in_match","required","validate","checkAvailability","countNonEmptyRows","participantsHandler"],"sources":["/home/indiora/ATS/frontend/src/pages/CreateBracket/CreateBracket.jsx"],"sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nimport { useForm } from \"react-hook-form\";\nimport MyFormGroupInput from \"../../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport MyButton from \"../../components/UI/MyButton/MyButton\";\nimport MyCard from \"../../components/UI/MyCard/MyCard\";\nimport classes from \"./CreateBracket.module.css\";\nimport bracketApi from \"../../services/api/bracketApi\";\nimport useAxios from \"../../API/useAxios\";\n\n\nconst CreateBracket = () => {\n  const navigate = useNavigate();\n  const api = useAxios()\n  const [participants, setParticipants] = useState(\"\");\n  const [responseBody, setResponseBody] = useState({\n    participants: \"\",\n    type: \"SE\",\n    points_loss: \"0\",\n    points_draw: \"0\",\n    points_victory: \"1\",\n    secod_final: false,\n  });\n\n  const SeParticipantOptions = ['2', '3', '4', '5', '6']\n  const SWParticipantOptions = ['2', '3', '4', '5', '6']\n  const DeParticipantOptions = ['2', '4', '6']\n\n  const SeAdvanceOptions = {\n    2: ['1'],\n    3: ['1'],\n    4: ['1', '2'],\n    5: ['1'],\n    6: ['1', '2', '3']\n  }\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setResponseBody({ ...responseBody, [name]: value });\n    setValue(name, value)\n  };\n\n  const inputSelectChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setResponseBody({ ...responseBody, [name]: value });\n  };\n\n  const inputCheckBoxChangeHandler = (e) => {\n    const { target } = e;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const { name } = target;\n    setResponseBody({ ...responseBody, [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  const onSubmitHandler = () => {\n    const response = bracketApi.createBracket(api, responseBody).then(function (response) {\n      if (response.status == 201) {\n        navigate(`/bracket/${response.data.id}`);\n      }\n    });\n  };\n\n  return (\n    <section>\n      <div className={`${classes.create_bracket_form}`}>\n        <Form onSubmit={handleSubmit(onSubmitHandler)}>\n          <div className=\"my-4\">\n          <MyCard>\n              <Card.Header className=\"card-header-text\">Bracket Info</Card.Header>\n              <Card.Body>\n                {/* One stage */}\n                <Form.Group className=\"mb-3\">\n                  <Form.Label className={`${classes.myFormLabel}`}>Bracket type</Form.Label>\n                  <Form.Select\n                    className=\"shadow-none select-input\"\n                    name=\"bracket_type\"\n                    onChange={(e) => inputSelectChangeHandler(e)}\n                  >\n                    <option value=\"1\">Single Elimination</option>\n                    <option value=\"2\">Double Elimination</option>\n                    <option value=\"3\">Round Robin</option>\n                    <option value=\"4\">Swiss</option>\n                  </Form.Select>\n                </Form.Group>\n                {/* Additional settings */}\n                  <div class=\"accordion mb-3\" id=\"accordionExtend\">\n                    <div class=\"accordion-item\">\n                      <h2 class=\"accordion-header\">\n                        <MyButton additionalCl={classes.editional_settings_btn} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                          Additional settings\n                        </MyButton>\n                      </h2>\n                      <div id=\"collapseOne\" class=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExtend\">\n                        {/* SE and DE bracket */}\n                        {responseBody.bracket_type == 1 || responseBody.bracket_type == 2 ?\n                          <div className=\"row\">\n                            <div className=\"col\">\n                              <Form.Label className={`${classes.myFormLabel}`}>Participant in match</Form.Label>\n                              <Form.Select\n                                className=\"shadow-none select-input\"\n                                name=\"participant_in_match\"\n                                onChange={(e) => inputSelectChangeHandler(e)}\n                              >\n                                {responseBody.bracket_type == 1 && SeParticipantOptions.map((value) => \n                                  <option value={value}>{value}</option>\n                                )}\n                                {responseBody.bracket_type == 2 && DeParticipantOptions.map((value) => \n                                  <option value={value}>{value}</option>\n                                )}\n                              </Form.Select>\n                            </div>\n                            <div className=\"col\">\n                            {responseBody.bracket_type == 1 && \n                              <Fragment>\n                                <Form.Label className={`${classes.myFormLabel}`}>Advances to next match</Form.Label>\n                                <Form.Select\n                                  className=\"shadow-none select-input\"\n                                  name=\"advances_to_next\"\n                                  onChange={(e) => inputSelectChangeHandler(e)}\n                                >\n                                  {responseBody.bracket_type == 1 && SeAdvanceOptions[responseBody?.participant_in_match].map((value) => \n                                    <option value={value}>{value}</option>\n                                  )}\n                                </Form.Select>\n                              </Fragment>\n                            }\n                            </div>\n                          </div>\n                          : \n                          // For SW and RR brackets\n                          <Fragment>\n                            {/* Only for SW */}\n                            {responseBody.bracket_type == 4 &&\n                              <div className=\"row\">\n                                <div className=\"col\">\n                                  <Form.Label className={`${classes.myFormLabel}`}>Participant in match</Form.Label>\n                                  <Form.Select\n                                    className=\"shadow-none select-input\"\n                                    name=\"participant_in_match\"\n                                    onChange={(e) => inputSelectChangeHandler(e)}\n                                  >\n                                    {SWParticipantOptions.map((value) => \n                                      <option value={value}>{value}</option>\n                                    )}\n                                  </Form.Select>\n                                </div>\n                                <div className=\"col\">\n                                  <MyFormGroupInput\n                                    label=\"Number of rounds, blank will be calculated automatically\"\n                                    name=\"number_of_rounds\"\n                                    defaultValue={null}\n                                    errors={errors}\n                                    register={register}\n                                    onChange={inputChangeHandler}\n                                  ></MyFormGroupInput>\n                                </div>\n                              </div>\n                            }\n                            <div className=\"row\">\n                              <div className=\"col\">\n                                <MyFormGroupInput\n                                  label=\"Points for victory\"\n                                  name=\"points_victory\"\n                                  errors={errors}\n                                  defaultValue={1}\n                                  register={register}\n                                  validationSchema={{\n                                    required: \"⚠ This input is required.\",\n                                  }}\n                                  onChange={inputChangeHandler}\n                                ></MyFormGroupInput>\n                              </div>\n                              <div className=\"col\">\n                                <MyFormGroupInput\n                                  label=\"Points for draw\"\n                                  name=\"points_draw\"\n                                  errors={errors}\n                                  defaultValue={0}\n                                  register={register}\n                                  validationSchema={{\n                                    required: \"⚠ This input is required.\",\n                                  }}\n                                  onChange={inputChangeHandler}\n                                ></MyFormGroupInput>\n                              </div>\n                              <div className=\"col\">\n                                <MyFormGroupInput\n                                  label=\"Points for loss\"\n                                  name=\"points_loss\"\n                                  defaultValue={0}\n                                  errors={errors}\n                                  register={register}\n                                  validationSchema={{\n                                    required: \"⚠ This input is required.\",\n                                  }}\n                                  onChange={inputChangeHandler}\n                                ></MyFormGroupInput>\n                              </div>\n                            </div>\n                          </Fragment>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                <MyFormGroupInput\n                  label=\"Participants\"\n                  name=\"participants\"\n                  defaultValue={participants}\n                  as=\"textarea\"\n                  errors={errors}\n                  register={register}\n                  validationSchema={{\n                    validate: {\n                      checkAvailability: () => {\n                        return countNonEmptyRows()\n                      },\n                    },\n                  }}\n                  onChange={(e) => {participantsHandler(e)}}\n                ></MyFormGroupInput>\n            \n              </Card.Body>\n            </MyCard>\n          </div>\n          <div className=\"mt-3\">\n            <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n              Create Bracket\n            </MyButton>\n          </div>\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default CreateBracket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}