{"ast":null,"code":"var _jsxFileName = \"/home/at/vercel_frontend/ATS/frontend/src/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    registerUser\n  } = useContext(AuthContext);\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n  };\n  const inputChangeHandler = inputValue => {\n    const {\n      name,\n      value\n    } = inputValue;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log_div position-absolute top-50 start-50 translate-middle\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(handleRegisterSubmit),\n        children: [/*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Username\",\n          name: \"username\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\"\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Email\",\n          name: \"email\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\",\n            pattern: {\n              value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              message: \"⚠ Invalid email.\"\n            }\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\"\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyFormGroupInput, {\n          label: \"Repeat password\",\n          type: \"password\",\n          name: \"password2\",\n          errors: errors,\n          register: register,\n          validationSchema: {\n            required: \"⚠ This input is required.\",\n            validate: value => {\n              const {\n                password\n              } = getValues();\n              return password === value || \"⚠ Passwords should match!\";\n            }\n          },\n          onChange: inputChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          additionalCl: \"btn-md\",\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"U63lAQhNkSiN1u/62VSYz21C1nU=\", false, function () {\n  return [useForm];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useContext","AuthContext","Form","MyButton","MyFormGroupInput","useForm","Register","state","setState","username","email","password","password2","registerUser","handleRegisterSubmit","inputChangeHandler","inputValue","name","value","register","handleSubmit","getValues","formState","errors","mode","required","pattern","message","validate"],"sources":["/home/at/vercel_frontend/ATS/frontend/src/pages/Register.jsx"],"sourcesContent":["import { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context\";\nimport Form from \"react-bootstrap/Form\";\nimport MyButton from \"../components/UI/MyButton/MyButton\";\nimport MyFormGroupInput from \"../components/UI/MyFormGroupInput/MyFormGroupInput\";\nimport { useForm } from \"react-hook-form\";\n\nconst Register = () => {\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { registerUser } = useContext(AuthContext);\n\n  const handleRegisterSubmit = async () => {\n    registerUser(state.username, state.email, state.password, state.password2);\n  };\n\n  const inputChangeHandler = (inputValue) => {\n    const { name, value } = inputValue;\n    setState({ ...state, [name]: value });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm({ mode: \"onBlur\" });\n\n  return (\n    <section>\n      <div className=\"log_div position-absolute top-50 start-50 translate-middle\">\n        <Form onSubmit={handleSubmit(handleRegisterSubmit)}>\n          <MyFormGroupInput\n            label=\"Username\"\n            name=\"username\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Email\"\n            name=\"email\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n              pattern: {\n                value:\n                  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"⚠ Invalid email.\",\n              },\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyFormGroupInput\n            label=\"Repeat password\"\n            type=\"password\"\n            name=\"password2\"\n            errors={errors}\n            register={register}\n            validationSchema={{\n              required: \"⚠ This input is required.\",\n              validate: (value) => {\n                const { password } = getValues();\n                return password === value || \"⚠ Passwords should match!\";\n              },\n            }}\n            onChange={inputChangeHandler}\n          ></MyFormGroupInput>\n          <MyButton additionalCl={\"btn-md\"} type=\"submit\">\n            Create\n          </MyButton>\n        </Form>\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,gBAAgB,MAAM,oDAAoD;AACjF,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IACjCU,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;EAEhD,MAAMa,oBAAoB,GAAG,YAAY;IACvCD,YAAY,CAACN,KAAK,CAACE,QAAQ,EAAEF,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,QAAQ,EAAEJ,KAAK,CAACK,SAAS,CAAC;EAC5E,CAAC;EAED,MAAMG,kBAAkB,GAAIC,UAAU,IAAK;IACzC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,UAAU;IAClCR,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAE,CAACU,IAAI,GAAGC;IAAM,CAAC,CAAC;EACvC,CAAC;EAED,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGlB,OAAO,CAAC;IAAEmB,IAAI,EAAE;EAAS,CAAC,CAAC;EAE/B,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,4DAA4D;MAAA,uBACzE,QAAC,IAAI;QAAC,QAAQ,EAAEJ,YAAY,CAACN,oBAAoB,CAAE;QAAA,wBACjD,QAAC,gBAAgB;UACf,KAAK,EAAC,UAAU;UAChB,IAAI,EAAC,UAAU;UACf,MAAM,EAAES,MAAO;UACf,QAAQ,EAAEJ,QAAS;UACnB,gBAAgB,EAAE;YAChBM,QAAQ,EAAE;UACZ,CAAE;UACF,QAAQ,EAAEV;QAAmB;UAAA;UAAA;UAAA;QAAA,QACX,eACpB,QAAC,gBAAgB;UACf,KAAK,EAAC,OAAO;UACb,IAAI,EAAC,OAAO;UACZ,MAAM,EAAEQ,MAAO;UACf,QAAQ,EAAEJ,QAAS;UACnB,gBAAgB,EAAE;YAChBM,QAAQ,EAAE,2BAA2B;YACrCC,OAAO,EAAE;cACPR,KAAK,EACH,uJAAuJ;cACzJS,OAAO,EAAE;YACX;UACF,CAAE;UACF,QAAQ,EAAEZ;QAAmB;UAAA;UAAA;UAAA;QAAA,QACX,eACpB,QAAC,gBAAgB;UACf,KAAK,EAAC,UAAU;UAChB,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,UAAU;UACf,MAAM,EAAEQ,MAAO;UACf,QAAQ,EAAEJ,QAAS;UACnB,gBAAgB,EAAE;YAChBM,QAAQ,EAAE;UACZ,CAAE;UACF,QAAQ,EAAEV;QAAmB;UAAA;UAAA;UAAA;QAAA,QACX,eACpB,QAAC,gBAAgB;UACf,KAAK,EAAC,iBAAiB;UACvB,IAAI,EAAC,UAAU;UACf,IAAI,EAAC,WAAW;UAChB,MAAM,EAAEQ,MAAO;UACf,QAAQ,EAAEJ,QAAS;UACnB,gBAAgB,EAAE;YAChBM,QAAQ,EAAE,2BAA2B;YACrCG,QAAQ,EAAGV,KAAK,IAAK;cACnB,MAAM;gBAAEP;cAAS,CAAC,GAAGU,SAAS,EAAE;cAChC,OAAOV,QAAQ,KAAKO,KAAK,IAAI,2BAA2B;YAC1D;UACF,CAAE;UACF,QAAQ,EAAEH;QAAmB;UAAA;UAAA;UAAA;QAAA,QACX,eACpB,QAAC,QAAQ;UAAC,YAAY,EAAE,QAAS;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEpC;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACE;AAEd,CAAC;AAAC,GAvFIT,QAAQ;EAAA,QAuBRD,OAAO;AAAA;AAAA,KAvBPC,QAAQ;AAyFd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}