{"ast":null,"code":"var _jsxFileName = \"/home/indiora/ATS/frontend/src/components/UI/SortebleTable/SortebleTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TableBody from './TableBody';\nimport TableHead from './TableHead';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MySortebleTable = _ref => {\n  _s();\n  let {\n    table,\n    columns\n  } = _ref;\n  // const data = ([{participant: \"aboba\", match_w_l: [0, 0], win: 1, loose: 1, draw: 1, scores: 4 },\n  //                 { participant: \"ibib\", match_w_l: [1, 2], win: 1, loose: 2, scores: 2 },\n  //                 { participant: \"lulu\", match_w_l: [3, 0], win: 1, loose: 0,  scores: 5 },\n  //               ]);\n\n  // const [tableData, handleSorting] =useSortableTable(table, columns)\n\n  useEffect(() => {\n    setTableData(getDefaultSorting(table, columns));\n  }, [table]);\n  const [tableData, setTableData] = useState(getDefaultSorting(table, columns));\n  function getDefaultSorting(defaultTableData, columns) {\n    const sorted = [...defaultTableData].sort((a, b) => {\n      const filterColumn = columns.filter(column => column.sortbyOrder);\n      let {\n        accessor = \"id\",\n        sortbyOrder = \"asc\"\n      } = Object.assign({}, ...filterColumn);\n      if (a[accessor] === null) return 1;\n      if (b[accessor] === null) return -1;\n      if (a[accessor] === null && b[accessor] === null) return 0;\n      const ascending = a[accessor].toString().localeCompare(b[accessor].toString(), \"en\", {\n        numeric: true\n      });\n      return sortbyOrder === \"asc\" ? ascending : -ascending;\n    });\n    return sorted;\n  }\n  const handleSorting = (sortField, sortOrder) => {\n    if (sortField) {\n      const sorted = [...tableData].sort((a, b) => {\n        if (a[sortField] === null) return 1;\n        if (b[sortField] === null) return -1;\n        if (a[sortField] === null && b[sortField] === null) return 0;\n        return a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\n          numeric: true\n        }) * (sortOrder === \"asc\" ? 1 : -1);\n      });\n      setTableData(sorted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        columns,\n        handleSorting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        columns,\n        tableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MySortebleTable, \"kHMH5yCx+fRHDe5cfdHuaxd8+3o=\");\n_c = MySortebleTable;\nexport default MySortebleTable;\nvar _c;\n$RefreshReg$(_c, \"MySortebleTable\");","map":{"version":3,"names":["React","useState","useEffect","TableBody","TableHead","MySortebleTable","table","columns","setTableData","getDefaultSorting","tableData","defaultTableData","sorted","sort","a","b","filterColumn","filter","column","sortbyOrder","accessor","Object","assign","ascending","toString","localeCompare","numeric","handleSorting","sortField","sortOrder"],"sources":["/home/indiora/ATS/frontend/src/components/UI/SortebleTable/SortebleTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TableBody from './TableBody';\nimport TableHead from './TableHead';\n\n\nconst MySortebleTable = ({ table, columns }) => {\n\n  // const data = ([{participant: \"aboba\", match_w_l: [0, 0], win: 1, loose: 1, draw: 1, scores: 4 },\n  //                 { participant: \"ibib\", match_w_l: [1, 2], win: 1, loose: 2, scores: 2 },\n  //                 { participant: \"lulu\", match_w_l: [3, 0], win: 1, loose: 0,  scores: 5 },\n  //               ]);\n\n\n    \n    // const [tableData, handleSorting] =useSortableTable(table, columns)\n\n    useEffect(() => {\n      setTableData(getDefaultSorting(table, columns))\n    }, [table])\n\n    const [tableData, setTableData] = useState(getDefaultSorting(table, columns));\n\n    function getDefaultSorting(defaultTableData, columns) {\n      const sorted = [...defaultTableData].sort((a, b) => {\n        const filterColumn = columns.filter((column) => column.sortbyOrder);\n    \n        let { accessor = \"id\", sortbyOrder = \"asc\" } = Object.assign(\n          {},\n          ...filterColumn\n        );\n    \n        if (a[accessor] === null) return 1;\n        if (b[accessor] === null) return -1;\n        if (a[accessor] === null && b[accessor] === null) return 0;\n    \n        const ascending = a[accessor]\n          .toString()\n          .localeCompare(b[accessor].toString(), \"en\", {\n            numeric: true,\n          });\n    \n        return sortbyOrder === \"asc\" ? ascending : -ascending;\n      });\n      return sorted;\n    }\n    \n    const handleSorting = (sortField, sortOrder) => {\n      if (sortField) {\n        const sorted = [...tableData].sort((a, b) => {\n          if (a[sortField] === null) return 1;\n          if (b[sortField] === null) return -1;\n          if (a[sortField] === null && b[sortField] === null) return 0;\n          return (\n            a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\n              numeric: true,\n            }) * (sortOrder === \"asc\" ? 1 : -1)\n          );\n        });\n        setTableData(sorted);\n      }\n    };\n\n  return (\n    <>\n      <table className=\"table\">\n        <TableHead {...{ columns, handleSorting }} />\n        <TableBody {...{ columns, tableData }} />\n      </table>\n    </>\n  );\n};\n\nexport default MySortebleTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}